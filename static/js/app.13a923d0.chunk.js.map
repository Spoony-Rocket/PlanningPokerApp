{"version":3,"sources":["shared/model/Message.ts","src/Results.tsx","src/UrlHandler.ts","ConfigConstants.ts","src/RoomHandler.ts","src/VoteValues.tsx","src/Root.tsx","App.tsx","web-build/register-service-worker.js"],"names":["MessageType","Results","users","renderUser","useCallback","user","displayValue","voteValue","key","id","style","styles","userCard","Text","userName","View","container","map","StyleSheet","create","alignItems","flexWrap","flexDirection","justifyContent","width","aspectRatio","backgroundColor","elevation","height","margin","Colors","useRoom","ws","useRef","WebSocket","current","useState","search","window","location","URLSearchParams","get","undefined","useUrlParam","UUID","toString","name","admin","room","setRoom","send","msg","JSON","stringify","useEffect","onopen","joinRequest","type","JoinRequest","roomId","payload","onmessage","event","parse","data","RoomUpdate","__DEV__","onerror","error","readyState","OPEN","updateNameRequest","SetName","vote","SetVoteValue","values","ValueCard","value","onPress","onCardPress","valueContainer","getColorForValue","valueCard","One","Two","Three","Five","Eight","Thirteen","TwentyOne","Unknown","VoteValues","onValuePress","marginHorizontal","borderRadius","Root","setUserName","updateUserName","newName","AsyncStorage","setItem","getItem","then","savedName","flex","padding","paddingTop","StatusBar","currentHeight","label","onChangeText","Object","App","navigator","addEventListener","serviceWorker","register","scope","info","catch","console"],"mappings":"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","file":"static/js/app.13a923d0.chunk.js","sourcesContent":["import { Room } from \"./Room\";\nimport { VoteValue } from \"./User\";\n\nexport type Message = JoinRequestMessage | JoinResponseMessage | SetVoteValueMessage | SetNameMessage | LeaveRequestMessage | RoomUpdateMessage;\n\nexport enum MessageType {\n  JoinRequest,\n  JoinResponse,\n  LeaveRequest,\n  SetVoteValue,\n  SetName,\n  RoomUpdate,\n}\n\nexport interface JoinRequestMessage {\n  type: MessageType.JoinRequest;\n  roomId: string;\n  payload: {\n    name: string;\n  };\n}\n\nexport interface JoinResponseMessage {\n  type: MessageType.JoinResponse;\n  roomId: string;\n  payload: {\n    userId: string;\n  };\n}\n\nexport interface SetVoteValueMessage {\n  type: MessageType.SetVoteValue;\n  roomId: string;\n  payload: {\n    voteValue: VoteValue;\n  };\n}\n\nexport interface SetNameMessage {\n  type: MessageType.SetName;\n  roomId: string;\n  payload: {\n    name: string;\n  };\n}\n\nexport interface LeaveRequestMessage {\n  type: MessageType.LeaveRequest;\n  roomId: string;\n}\n\nexport interface RoomUpdateMessage {\n  type: MessageType.RoomUpdate;\n  roomId: string;\n  payload: {\n    room: Room;\n  };\n}","import React, { useCallback, useMemo } from 'react';\nimport { ScrollView, StyleSheet, Text, View } from 'react-native';\nimport { Card } from 'react-native-paper';\n\nimport { User } from '../shared/model/User';\n\ntype Props = {\n  users: User[];\n};\nexport const Results: React.FC<Props> = ({ users }) => {\n  const renderUser = useCallback((user: User) => {\n    const displayValue =\n      user.voteValue && user.voteValue !== 'hidden' ? user.voteValue : '?';\n\n    return (\n      <Card key={`${user.id}`} style={styles.userCard}>\n        <Text>{`User: ${user.userName}`}</Text>\n        <Text>{`Vote value: ${displayValue}`}</Text>\n      </Card>\n    );\n  }, []);\n\n  return <View style={styles.container}>{users.map(renderUser)}</View>;\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    width: '50%',\n  },\n  userCard: {\n    aspectRatio: 2,\n    backgroundColor: 'tomato',\n    elevation: 4,\n    height: 200,\n    margin: 8,\n    width: 100,\n  },\n});\n","export const useUrlParam = (key: string) => {\n  const search = window.location.search;\n\n  const params = new URLSearchParams(search);\n\n  return params.get(key) || undefined;\n};\n","export enum Colors {\n  One = '#C6FFAD',\n  Two = '#9EFF64',\n  Three = '#FFFF3C',\n  Five = '#E9A426',\n  Eight = '#DB0000',\n  Thirteen = '#D581EA',\n  TwentyOne = '#BABABA',\n  Unknown = '#FFFFFF',\n}\n","import UUID from 'pure-uuid';\nimport { useCallback, useEffect, useRef, useState } from 'react';\n\nimport {\n  JoinRequestMessage,\n  Message,\n  MessageType,\n  SetNameMessage,\n  SetVoteValueMessage,\n} from '../shared/model/Message';\nimport { Room } from '../shared/model/Room';\nimport { VoteValue } from '../shared/model/User';\n\nimport { useUrlParam } from './UrlHandler';\n\n// Connect to Heroku 🧙‍♂️ (Update the port)\nconst SERVER_HOST = __DEV__\n  ? 'ws://localhost:8999'\n  : 'wss://planningpokerserver.herokuapp.com/';\n\nconst createEmptyRoom = (id: string): Room => ({\n  id,\n  name: '',\n  users: {},\n  admin: undefined,\n});\n\nexport const useRoom = (userName: string) => {\n  const ws = useRef(new WebSocket(SERVER_HOST)).current;\n  const [room, setRoom] = useState(\n    createEmptyRoom(useUrlParam('roomId') || new UUID(4).toString()),\n  );\n\n  userName = userName || 'Guest';\n\n  const send = useCallback((msg: any) => ws.send(JSON.stringify(msg)), [ws]);\n\n  useEffect(() => {\n    ws.onopen = () => {\n      if (__DEV__) {\n        // eslint-disable-next-line no-console\n        console.log('Opened WebSocket connection');\n      }\n\n      const joinRequest: JoinRequestMessage = {\n        type: MessageType.JoinRequest,\n        roomId: room.id,\n        payload: {\n          name: userName,\n        },\n      };\n      send(joinRequest);\n    };\n    ws.onmessage = (event) => {\n      const msg: Message = JSON.parse(event.data);\n\n      if (__DEV__) {\n        // eslint-disable-next-line no-console\n        console.log('Received message: ', msg);\n      }\n\n      switch (msg.type) {\n        case MessageType.RoomUpdate: {\n          if (__DEV__) {\n            // eslint-disable-next-line no-console\n            console.log('Updating room');\n          }\n          setRoom(msg.payload.room);\n          break;\n        }\n        default:\n      }\n    };\n    ws.onerror = (error) => {\n      if (__DEV__) {\n        // eslint-disable-next-line no-console\n        console.error('Error: ', error);\n      }\n      // setErrorMessage({ title: 'Oops!', message: 'Something went wrong...' });\n    };\n  }, [room.id, send, userName, ws]);\n\n  useEffect(() => {\n    if (ws.readyState === WebSocket.OPEN) {\n      const updateNameRequest: SetNameMessage = {\n        type: MessageType.SetName,\n        roomId: room.id,\n        payload: {\n          name: userName,\n        },\n      };\n      send(updateNameRequest);\n    }\n  }, [room.id, send, userName, ws.readyState]);\n\n  const vote = (voteValue: VoteValue) => {\n    const msg: SetVoteValueMessage = {\n      type: MessageType.SetVoteValue,\n      roomId: room.id,\n      payload: {\n        voteValue,\n      },\n    };\n    send(msg);\n  };\n\n  return { vote, room };\n};\n","import React, { useCallback } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card, Text } from 'react-native-paper';\n\nimport { Colors } from '../ConfigConstants';\nimport { VoteValue } from '../shared/model/User';\n\ntype Props = {\n  value: VoteValue;\n  onPress: (value: VoteValue) => void;\n};\n\nconst values: VoteValue[] = [0, 1, 2, 3, 5, 8, 13, 21, '🤔'];\n\nexport const ValueCard: React.FC<Props> = ({ value, onPress }) => {\n  const onCardPress = useCallback(() => onPress(value), [onPress, value]);\n\n  return (\n    <Card\n      style={[\n        styles.valueContainer,\n        {\n          backgroundColor: getColorForValue(value),\n        },\n      ]}\n      onPress={onCardPress}\n    >\n      <View style={styles.valueCard}>\n        <Text>{value}</Text>\n      </View>\n    </Card>\n  );\n};\n\nconst getColorForValue = (value: VoteValue): Colors => {\n  switch (value) {\n    case 1:\n      return Colors.One;\n    case 2:\n      return Colors.Two;\n    case 3:\n      return Colors.Three;\n    case 5:\n      return Colors.Five;\n    case 8:\n      return Colors.Eight;\n    case 13:\n      return Colors.Thirteen;\n    case 21:\n      return Colors.TwentyOne;\n    default:\n      return Colors.Unknown;\n  }\n};\n\ntype ValuesProps = {\n  onValuePress: (value: VoteValue) => void;\n};\n\nexport const VoteValues: React.FC<ValuesProps> = ({ onValuePress }) => {\n  return (\n    <View style={styles.container}>\n      {values.map((value) => (\n        <ValueCard key={value} value={value} onPress={onValuePress} />\n      ))}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n  },\n  valueContainer: {\n    marginHorizontal: 8,\n    elevation: 4,\n  },\n  valueCard: {\n    alignItems: 'center',\n    borderRadius: 8,\n    height: 50,\n    justifyContent: 'center',\n    width: 50,\n  },\n});\n","import React, { useCallback, useState, useEffect } from 'react';\nimport { StatusBar, Text, View, AsyncStorage } from 'react-native';\nimport { TextInput } from 'react-native-paper';\n\nimport { Results } from './Results';\nimport { useRoom } from './RoomHandler';\nimport { VoteValues } from './VoteValues';\n\nexport const Root: React.FC = () => {\n  const [userName, setUserName] = useState<string>('');\n\n  const { vote, room } = useRoom(userName);\n\n  const updateUserName = useCallback(\n    (newName: string) => {\n      setUserName(newName);\n      AsyncStorage.setItem('username', newName);\n    },\n    [setUserName],\n  );\n\n  useEffect(() => {\n    AsyncStorage.getItem('username').then((savedName) => {\n      if (savedName) {\n        setUserName(savedName);\n      }\n    });\n  });\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        padding: 16,\n        paddingTop: (StatusBar.currentHeight ?? 0) + 16,\n      }}\n    >\n      <Text>{`Room id: ${room.id}`}</Text>\n      <View style={{ width: '50%' }}>\n        <TextInput\n          value={userName}\n          label={'Username'}\n          onChangeText={updateUserName}\n        />\n      </View>\n      <VoteValues onValuePress={vote} />\n      <Results users={Object.values(room.users)} />\n    </View>\n  );\n};\n","import React from 'react';\n\nimport { Root } from './src/Root';\n\nconst App = () => {\n  return <Root />;\n};\n\nexport default App;\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/PlanningPokerApp/expo-service-worker.js', { scope: '/PlanningPokerApp/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}