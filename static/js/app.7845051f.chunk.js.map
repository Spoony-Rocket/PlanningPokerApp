{"version":3,"sources":["src/hooks/Theme.ts","src/styles/Font.ts","src/ResultCard.tsx","shared/model/Message.ts","src/atoms/Row.tsx","src/Results.tsx","src/UrlHandler.ts","ConfigConstants.ts","src/RoomHandler.ts","src/VoteValues.tsx","src/atoms/ResetButton.tsx","src/styles/Constants.ts","src/atoms/Spacer.tsx","src/builders/RoomCard.tsx","src/builders/UserCard.tsx","src/Root.tsx","src/styles/Theme.ts","App.tsx","web-build/register-service-worker.js","assets/fonts/Poppins-Regular.ttf"],"names":["useSystemDarkMode","useState","Appearance","getColorScheme","isSystemDark","setSystemDark","useEffect","subscription","addChangeListener","colorScheme","remove","useStyleSheet","createStyleSheet","theme","useTheme","styles","setStyles","fontStyles","StyleSheet","create","body1","fontFamily","fontSize","fontWeight","letterSpacing","body2","button","caption","headline1","headline2","headline3","headline4","headline5","headline6","overline","subtitle1","subtitle2","MessageType","AvatarWatermark","View","style","avatarWatermark","ResultCard","showAvatar","username","resultValue","displayValue","avatarDecoration","resultCard","resultCardTitleContainer","resultCardSubtitleContainer","subtitle","numberOfLines","borderWidth","borderColor","dark","colors","accent","primary","position","top","right","borderRadius","roundness","elevation","height","margin","overflow","width","alignItems","backgroundColor","flexShrink","paddingHorizontal","flex","justifyContent","color","FlexWrapRow","children","mode","flexWrapRow","alignSelf","flexDirection","flexWrap","marginVertical","Results","users","userId","sort","a","b","voteValueToNumber","voteValue","map","user","isCurrentUser","id","key","userName","v","Number","MAX_SAFE_INTEGER","Colors","useRoom","ws","useRef","WebSocket","current","roomId","search","window","location","URLSearchParams","get","undefined","useUrlParam","setVoteValue","setUserId","Platform","OS","UUID","toString","name","admin","room","setRoom","send","useCallback","msg","JSON","stringify","onopen","joinRequest","type","JoinRequest","payload","onmessage","event","data","parse","JoinResponse","RoomUpdate","__DEV__","console","log","onerror","error","readyState","OPEN","updateNameRequest","SetName","reset","Reset","vote","newVoteValue","SetVoteValue","values","ValueCard","value","onPress","isDark","greyedOut","onCardPress","valueContainer","getColorForValue","valueCard","DarkDisabled","LightDisabled","DarkZero","LightZero","DarkOne","LightOne","DarkTwo","LightTwo","DarkThree","LightThree","DarkFive","LightFive","DarkEight","LightEight","DarkThirteen","LightThirteen","DarkTwentyOne","LightTwentyOne","DarkUnknown","LightUnknown","VoteValues","onValuePress","selectedValue","container","marginHorizontal","ResetButton","icon","constants","small","standard","medium","large","extraLarge","S","spacingSmall","C","spacingStandard","spacingMedium","spacingLarge","spacingExtraLarge","Spacer","RoomCard","clipTextOverflow","background","UserCard","onUsernameChange","label","onChangeText","Root","toggleTheme","setUserName","updateUserName","newName","AsyncStorage","setItem","getItem","then","savedName","page","canvas","head","switchWrapper","onChange","divider","flexRow","Object","paddingVertical","wp","borderBottomColor","borderBottomWidth","fillWidth","paddingBottom","light","DefaultTheme","DarkTheme","setIsDark","useFonts","Poppins","require","fontsLoaded","savedIsDark","Theme","AppLoading","navigator","addEventListener","serviceWorker","register","scope","info","catch","module","exports"],"mappings":"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","file":"static/js/app.7845051f.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { ImageStyle, StyleSheet, TextStyle, ViewStyle } from 'react-native';\nimport { Appearance } from 'react-native-appearance';\nimport { Theme, useTheme } from 'react-native-paper';\n\nexport const useSystemDarkMode = () => {\n  const [isSystemDark, setSystemDark] = useState<boolean>(\n    Appearance.getColorScheme() === 'dark',\n  );\n\n  useEffect(() => {\n    const subscription = Appearance.addChangeListener(({ colorScheme }) => {\n      setSystemDark(colorScheme === 'dark');\n    });\n\n    return () => subscription.remove();\n  }, []);\n\n  return isSystemDark;\n};\n\nexport const useManualDarkMode = () => {\n  const isSystemDark = useSystemDarkMode();\n  const [isDark, setIsDark] = useState(isSystemDark);\n\n  useEffect(() => {\n    setIsDark(isSystemDark);\n  }, [isSystemDark]);\n\n  return [isDark, setIsDark];\n};\n\nexport const useStyleSheet = <T>(createStyleSheet: (theme: Theme) => T) => {\n  const theme = useTheme();\n  const [styles, setStyles] = useState<T>(createStyleSheet(theme));\n\n  useEffect(() => {\n    setStyles(createStyleSheet(theme));\n  }, [createStyleSheet, theme]);\n\n  return styles;\n};\n","import { StyleSheet } from 'react-native';\n\nexport const fontStyles = StyleSheet.create({\n  body1: {\n    fontFamily: 'Poppins',\n    fontSize: 16,\n    fontWeight: '400',\n    letterSpacing: 0.5,\n  },\n  body2: {\n    fontFamily: 'Poppins',\n    fontSize: 14,\n    fontWeight: '400',\n    letterSpacing: 0.25,\n  },\n  button: {\n    fontFamily: 'Poppins',\n    fontSize: 14,\n    fontWeight: '500',\n    letterSpacing: 1.25,\n  },\n  caption: {\n    fontFamily: 'Poppins',\n    fontSize: 12,\n    fontWeight: '400',\n    letterSpacing: 0.4,\n  },\n  headline1: {\n    fontFamily: 'Poppins',\n    fontSize: 96,\n    fontWeight: '300',\n    letterSpacing: -1.5,\n  },\n  headline2: {\n    fontFamily: 'Poppins',\n    fontSize: 60,\n    fontWeight: '300',\n    letterSpacing: -0.5,\n  },\n  headline3: {\n    fontFamily: 'Poppins',\n    fontSize: 48,\n    fontWeight: '400',\n    letterSpacing: 0,\n  },\n  headline4: {\n    fontFamily: 'Poppins',\n    fontSize: 34,\n    fontWeight: '400',\n    letterSpacing: 0.25,\n  },\n  headline5: {\n    fontFamily: 'Poppins',\n    fontSize: 24,\n    fontWeight: '400',\n    letterSpacing: 0,\n  },\n  headline6: {\n    fontFamily: 'Poppins',\n    fontSize: 20,\n    fontWeight: '500',\n    letterSpacing: 0.15,\n  },\n  overline: {\n    fontFamily: 'Poppins',\n    fontSize: 10,\n    fontWeight: '400',\n    letterSpacing: 1.5,\n  },\n  subtitle1: {\n    fontFamily: 'Poppins',\n    fontSize: 16,\n    fontWeight: '400',\n    letterSpacing: 0.15,\n  },\n  subtitle2: {\n    fontFamily: 'Poppins',\n    fontSize: 14,\n    fontWeight: '500',\n    letterSpacing: 0.1,\n  },\n});\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Surface, Text, Theme } from 'react-native-paper';\n\nimport { VoteValue } from '../shared/model/User';\n\nimport { useStyleSheet } from './hooks/Theme';\nimport { fontStyles } from './styles/Font';\n\nconst AvatarWatermark: React.FC = () => {\n  const styles = useStyleSheet(createStyleSheet);\n  return (\n    <View style={styles.avatarWatermark}>\n      <Text style={fontStyles.body2}>{'👤'}</Text>\n    </View>\n  );\n};\n\ntype Props = {\n  showAvatar: boolean;\n  resultValue: VoteValue;\n  username: string;\n};\n\nexport const ResultCard: React.FC<Props> = ({\n  showAvatar,\n  username,\n  resultValue,\n}) => {\n  const styles = useStyleSheet(createStyleSheet);\n\n  const displayValue =\n    resultValue && resultValue !== 'hidden' ? resultValue : '?';\n\n  return (\n    <Surface style={[showAvatar && styles.avatarDecoration, styles.resultCard]}>\n      {showAvatar && <AvatarWatermark />}\n      <View style={styles.resultCardTitleContainer}>\n        <Text style={fontStyles.headline3}>{displayValue}</Text>\n      </View>\n      <View style={styles.resultCardSubtitleContainer}>\n        <Text style={styles.subtitle} numberOfLines={1}>\n          {username}\n        </Text>\n      </View>\n    </Surface>\n  );\n};\n\nconst createStyleSheet = (theme: Theme) =>\n  StyleSheet.create({\n    avatarDecoration: {\n      borderWidth: 2,\n      borderColor: theme.dark ? theme.colors.accent : theme.colors.primary,\n    },\n    avatarWatermark: {\n      position: 'absolute',\n      top: 4,\n      right: 4,\n    },\n    resultCard: {\n      borderRadius: theme.roundness * 2,\n      elevation: 8,\n      height: 150,\n      margin: 8,\n      overflow: 'hidden',\n      width: 100,\n    },\n    resultCardSubtitleContainer: {\n      alignItems: 'center',\n      backgroundColor: theme.dark ? theme.colors.accent : theme.colors.primary,\n      flexShrink: 1,\n      paddingHorizontal: 4,\n    },\n    resultCardTitleContainer: {\n      alignItems: 'center',\n      flex: 1,\n      justifyContent: 'center',\n    },\n    subtitle: { ...fontStyles.body1, color: theme.dark ? 'black' : 'white' },\n  });\n","import { Room } from './Room';\nimport { VoteValue } from './User';\n\nexport type Message =\n  | IJoinRequestMessage\n  | IJoinResponseMessage\n  | ILeaveRequestMessage\n  | IResetMessage\n  | IRoomUpdateMessage\n  | ISetNameMessage\n  | ISetVoteValueMessage;\n\nexport enum MessageType {\n  JoinRequest,\n  JoinResponse,\n  LeaveRequest,\n  Reset,\n  RoomUpdate,\n  SetName,\n  SetVoteValue,\n}\n\nexport interface IJoinRequestMessage {\n  type: MessageType.JoinRequest;\n  roomId: string;\n  payload: {\n    name: string;\n  };\n}\n\nexport interface IJoinResponseMessage {\n  type: MessageType.JoinResponse;\n  roomId: string;\n  payload: {\n    userId: string;\n  };\n}\n\nexport interface ISetVoteValueMessage {\n  type: MessageType.SetVoteValue;\n  roomId: string;\n  payload: {\n    voteValue: VoteValue;\n  };\n}\n\nexport interface ISetNameMessage {\n  type: MessageType.SetName;\n  roomId: string;\n  payload: {\n    name: string;\n  };\n}\n\nexport interface ILeaveRequestMessage {\n  type: MessageType.LeaveRequest;\n  roomId: string;\n}\n\nexport interface IRoomUpdateMessage {\n  type: MessageType.RoomUpdate;\n  roomId: string;\n  payload: {\n    room: Room;\n  };\n}\n\nexport interface IResetMessage {\n  type: MessageType.Reset;\n  roomId: string;\n}\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\ntype FlexWrapRowProps = {\n  mode?:\n    | 'flex-start'\n    | 'flex-end'\n    | 'center'\n    | 'space-between'\n    | 'space-around'\n    | 'space-evenly';\n};\n\nexport const FlexWrapRow: React.FC<FlexWrapRowProps> = ({ children, mode }) => {\n  return (\n    <View style={[styles.flexWrapRow, { justifyContent: mode }]}>\n      {children}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  flexWrapRow: {\n    alignItems: 'center',\n    alignSelf: 'stretch',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginVertical: 16,\n  },\n});\n","import React from 'react';\n\nimport { User, VoteValue } from '../shared/model/User';\n\nimport { ResultCard } from './ResultCard';\nimport { FlexWrapRow } from './atoms/Row';\n\ntype Props = {\n  users: User[];\n  userId?: string;\n};\n\nexport const Results: React.FC<Props> = ({ users, userId }) => {\n  return (\n    <FlexWrapRow mode=\"center\">\n      {users\n        .sort(\n          (a: User, b: User) =>\n            voteValueToNumber(a.voteValue) - voteValueToNumber(b.voteValue),\n        )\n        .map((user) => {\n          const isCurrentUser = user.id === userId;\n\n          return (\n            <ResultCard\n              key={user.id}\n              resultValue={user.voteValue}\n              showAvatar={isCurrentUser}\n              username={user.userName}\n            />\n          );\n        })}\n    </FlexWrapRow>\n  );\n};\n\nconst voteValueToNumber = (v: VoteValue) => {\n  switch (typeof v) {\n    case 'number':\n      return v;\n    default:\n      return Number.MAX_SAFE_INTEGER;\n  }\n};\n","export const useUrlParam = (key: string) => {\n  const search = window.location.search;\n\n  const params = new URLSearchParams(search);\n\n  return params.get(key) || undefined;\n};\n","export enum Colors {\n  DarkZero = '#97b498',\n  DarkOne = '#94cc7d',\n  DarkTwo = '#69cb30',\n  DarkThree = '#c8cc00',\n  DarkFive = '#b27500',\n  DarkEight = '#a10000',\n  DarkThirteen = '#a252b7',\n  DarkTwentyOne = '#8a8a8a',\n  DarkUnknown = '#000000',\n  DarkDisabled = '#333',\n  LightZero = '#c8e6c9',\n  LightOne = '#C6FFAD',\n  LightTwo = '#9EFF64',\n  LightThree = '#FFFF3C',\n  LightFive = '#E9A426',\n  LightEight = '#DB0000',\n  LightThirteen = '#D581EA',\n  LightTwentyOne = '#BABABA',\n  LightUnknown = '#FFFFFF',\n  LightDisabled = '#ccc',\n}\n","import UUID from 'pure-uuid';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { Platform } from 'react-native';\n\nimport {\n  IJoinRequestMessage,\n  IResetMessage,\n  ISetNameMessage,\n  ISetVoteValueMessage,\n  Message,\n  MessageType,\n} from '../shared/model/Message';\nimport { Room } from '../shared/model/Room';\nimport { VoteValue } from '../shared/model/User';\n\nimport { useUrlParam } from './UrlHandler';\n\n// Connect to Heroku 🧙‍♂️ (Update the port)\nconst SERVER_HOST = __DEV__\n  ? 'ws://localhost:8999'\n  : 'wss://planningpokerserver.herokuapp.com/';\n\nconst createEmptyRoom = (id: string): Room => ({\n  id,\n  name: '',\n  users: {},\n  admin: undefined,\n});\n\nexport const useRoom = (userName: string) => {\n  const ws = useRef(new WebSocket(SERVER_HOST)).current;\n  const roomId = useUrlParam('roomId');\n  const [voteValue, setVoteValue] = useState<VoteValue>();\n  const [userId, setUserId] = useState<string>();\n\n  if (Platform.OS === 'web' && !roomId) {\n    window.location.search = 'roomId=' + new UUID(4).toString();\n  }\n\n  const [room, setRoom] = useState(\n    createEmptyRoom(roomId || new UUID(4).toString()),\n  );\n\n  userName = userName || 'Guest';\n\n  const send = useCallback((msg: any) => ws.send(JSON.stringify(msg)), [ws]);\n\n  useEffect(() => {\n    ws.onopen = () => {\n      if (__DEV__) {\n        // eslint-disable-next-line no-console\n        console.log('Opened WebSocket connection');\n      }\n\n      const joinRequest: IJoinRequestMessage = {\n        type: MessageType.JoinRequest,\n        roomId: room.id,\n        payload: {\n          name: userName,\n        },\n      };\n      send(joinRequest);\n    };\n    ws.onmessage = (event) => {\n      if (event.data === 'Heartbeat') {\n        // eslint-disable-next-line\n        console.log('Received heartbeat from server');\n        return;\n      }\n\n      const msg: Message = JSON.parse(event.data);\n\n      if (__DEV__) {\n        // eslint-disable-next-line no-console\n        console.log('Received message: ', msg);\n      }\n\n      switch (msg.type) {\n        case MessageType.JoinResponse: {\n          setUserId(msg.payload.userId);\n          break;\n        }\n        case MessageType.RoomUpdate: {\n          if (__DEV__) {\n            // eslint-disable-next-line no-console\n            console.log('Updating room');\n          }\n          setRoom(msg.payload.room);\n          if (userId && msg.payload.room.users[userId].voteValue !== 'hidden') {\n            setVoteValue(msg.payload.room.users[userId].voteValue);\n          }\n          break;\n        }\n        default:\n      }\n    };\n    ws.onerror = (error) => {\n      if (__DEV__) {\n        // eslint-disable-next-line no-console\n        console.error('Error: ', error);\n      }\n      // setErrorMessage({ title: 'Oops!', message: 'Something went wrong...' });\n    };\n  }, [room.id, send, userId, userName, ws]);\n\n  useEffect(() => {\n    if (ws.readyState === WebSocket.OPEN) {\n      const updateNameRequest: ISetNameMessage = {\n        type: MessageType.SetName,\n        roomId: room.id,\n        payload: {\n          name: userName,\n        },\n      };\n      send(updateNameRequest);\n    }\n  }, [room.id, send, userName, ws.readyState]);\n\n  const vote = (newVoteValue: VoteValue) => {\n    setVoteValue(newVoteValue);\n    const msg: ISetVoteValueMessage = {\n      type: MessageType.SetVoteValue,\n      roomId: room.id,\n      payload: {\n        voteValue: newVoteValue,\n      },\n    };\n    send(msg);\n  };\n\n  const reset = () => {\n    setVoteValue(undefined);\n    const msg: IResetMessage = {\n      type: MessageType.Reset,\n      roomId: room.id,\n    };\n    send(msg);\n  };\n\n  return {\n    reset,\n    room,\n    userId,\n    vote,\n    voteValue,\n  };\n};\n","import React, { useCallback } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { useColorScheme } from 'react-native-appearance';\nimport { Card, Text, Theme } from 'react-native-paper';\n\nimport { Colors } from '../ConfigConstants';\nimport { VoteValue } from '../shared/model/User';\n\nimport { FlexWrapRow } from './atoms/Row';\nimport { useStyleSheet } from './hooks/Theme';\nimport { fontStyles } from './styles/Font';\n\ntype Props = {\n  value: VoteValue;\n  onPress: (value: VoteValue) => void;\n  isDark: boolean;\n  greyedOut: boolean;\n};\n\nconst values: VoteValue[] = [0, 1, 2, 3, 5, 8, 13, 21, '🤔'];\n\nexport const ValueCard: React.FC<Props> = ({\n  value,\n  onPress,\n  isDark,\n  greyedOut,\n}) => {\n  const styles = useStyleSheet(createStyleSheet);\n  const onCardPress = useCallback(() => onPress(value), [onPress, value]);\n\n  return (\n    <Card\n      style={[\n        styles.valueContainer,\n        {\n          backgroundColor: greyedOut\n            ? getColorForValue(-1, isDark)\n            : getColorForValue(value, isDark),\n        },\n      ]}\n      onPress={onCardPress}\n    >\n      <View style={styles.valueCard}>\n        <Text style={[fontStyles.subtitle1, { fontWeight: '900' }]}>\n          {value}\n        </Text>\n      </View>\n    </Card>\n  );\n};\n\nconst getColorForValue = (value: VoteValue, dark: boolean): Colors => {\n  switch (value) {\n    case -1:\n      return dark ? Colors.DarkDisabled : Colors.LightDisabled;\n    case 0:\n      return dark ? Colors.DarkZero : Colors.LightZero;\n    case 1:\n      return dark ? Colors.DarkOne : Colors.LightOne;\n    case 2:\n      return dark ? Colors.DarkTwo : Colors.LightTwo;\n    case 3:\n      return dark ? Colors.DarkThree : Colors.LightThree;\n    case 5:\n      return dark ? Colors.DarkFive : Colors.LightFive;\n    case 8:\n      return dark ? Colors.DarkEight : Colors.LightEight;\n    case 13:\n      return dark ? Colors.DarkThirteen : Colors.LightThirteen;\n    case 21:\n      return dark ? Colors.DarkTwentyOne : Colors.LightTwentyOne;\n    default:\n      return dark ? Colors.DarkUnknown : Colors.LightUnknown;\n  }\n};\n\ntype ValuesProps = {\n  onValuePress: (value: VoteValue) => void;\n  selectedValue: VoteValue | undefined;\n  isDark: boolean;\n};\n\nexport const VoteValues: React.FC<ValuesProps> = ({\n  onValuePress,\n  selectedValue,\n  isDark,\n}) => {\n  return (\n    <FlexWrapRow mode=\"center\">\n      {values.map((value) => (\n        <ValueCard\n          key={value}\n          value={value}\n          onPress={onValuePress}\n          isDark={isDark}\n          greyedOut={selectedValue !== undefined && selectedValue !== value}\n        />\n      ))}\n    </FlexWrapRow>\n  );\n};\n\nconst createStyleSheet = (theme: Theme) =>\n  StyleSheet.create({\n    container: {\n      flexDirection: 'row',\n      justifyContent: 'center',\n    },\n    valueCard: {\n      alignItems: 'center',\n      borderRadius: 8,\n      height: 50,\n      justifyContent: 'center',\n      width: 50,\n    },\n    valueContainer: {\n      marginHorizontal: 8,\n      elevation: 4,\n      marginVertical: 4,\n    },\n  });\n","import React from 'react';\nimport { Button } from 'react-native-paper';\n\ninterface IProps {\n  onPress: () => void;\n}\n\nexport const ResetButton: React.FC<IProps> = ({ onPress }) => (\n  <Button icon=\"replay\" mode=\"contained\" onPress={onPress}>\n    Reset\n  </Button>\n);\n","export const constants = {\n  spacing: {\n    small: 4,\n    standard: 8,\n    medium: 16,\n    large: 32,\n    extraLarge: 64,\n  },\n};\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nimport { constants as C } from '../styles/Constants';\n\nconst S = StyleSheet.create({\n  spacingSmall: { width: C.spacing.small, height: C.spacing.small },\n  spacingStandard: { width: C.spacing.standard, height: C.spacing.standard },\n  spacingMedium: { width: C.spacing.medium, height: C.spacing.medium },\n  spacingLarge: { width: C.spacing.large, height: C.spacing.large },\n  spacingExtraLarge: {\n    width: C.spacing.extraLarge,\n    height: C.spacing.extraLarge,\n  },\n});\n\ntype Props = {\n  small?: boolean;\n  medium?: boolean;\n  large?: boolean;\n  extraLarge?: boolean;\n};\n\nexport const Spacer: React.FC<Props> = ({\n  small,\n  medium,\n  large,\n  extraLarge,\n}) => {\n  let style = S.spacingStandard;\n  if (small) style = S.spacingSmall;\n  else if (medium) style = S.spacingMedium;\n  else if (large) style = S.spacingLarge;\n  else if (extraLarge) style = S.spacingExtraLarge;\n\n  return <View style={style} />;\n};\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card, Text, Theme } from 'react-native-paper';\n\nimport { Spacer } from '../atoms/Spacer';\nimport { useStyleSheet } from '../hooks/Theme';\nimport { fontStyles } from '../styles/Font';\n\ntype RoomCardProps = {\n  roomId: string;\n};\n\nexport const RoomCard: React.FC<RoomCardProps> = ({ roomId }) => {\n  const styles = useStyleSheet(createStyleSheet);\n\n  return (\n    <Card elevation={0} style={styles.clipTextOverflow}>\n      <View style={[styles.container, styles.clipTextOverflow]}>\n        <Spacer medium />\n        <Text style={fontStyles.headline5}>Room</Text>\n        <Text\n          style={fontStyles.subtitle2}\n          numberOfLines={2}\n        >{`ID: ${roomId}`}</Text>\n        <Spacer medium />\n      </View>\n    </Card>\n  );\n};\n\nconst createStyleSheet = (theme: Theme) =>\n  StyleSheet.create({\n    container: {\n      paddingHorizontal: 8,\n      backgroundColor: theme.colors.background,\n      borderRadius: theme.roundness,\n    },\n    clipTextOverflow: { flexShrink: 1 },\n  });\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card, Text, TextInput, Theme, useTheme } from 'react-native-paper';\n\nimport { Spacer } from '../atoms/Spacer';\nimport { useStyleSheet } from '../hooks/Theme';\nimport { fontStyles } from '../styles/Font';\n\ntype UserCardProps = {\n  username: string;\n  onUsernameChange: (value: string) => void;\n};\n\nexport const UserCard: React.FC<UserCardProps> = ({\n  username,\n  onUsernameChange,\n}) => {\n  const styles = useStyleSheet(createStyleSheet);\n  const theme = useTheme();\n  return (\n    <Card elevation={0}>\n      <View style={styles.container}>\n        <Spacer medium />\n        <Text style={fontStyles.headline5}>User</Text>\n        <TextInput\n          style={{ backgroundColor: theme.colors.background }}\n          value={username}\n          label={'Username'}\n          onChangeText={onUsernameChange}\n        />\n        <Spacer medium />\n      </View>\n    </Card>\n  );\n};\n\nconst createStyleSheet = (theme: Theme) =>\n  StyleSheet.create({\n    container: {\n      paddingHorizontal: 8,\n      backgroundColor: theme.colors.background,\n      borderRadius: theme.roundness * 2,\n    },\n  });\n","import Switch from 'expo-dark-mode-switch';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { AsyncStorage, StyleSheet, View } from 'react-native';\nimport { Surface, Text, Theme } from 'react-native-paper';\nimport { widthPercentageToDP as wp } from 'react-native-responsive-screen';\n\nimport { Results } from './Results';\nimport { useRoom } from './RoomHandler';\nimport { VoteValues } from './VoteValues';\nimport { ResetButton } from './atoms/ResetButton';\nimport { FlexWrapRow } from './atoms/Row';\nimport { Spacer } from './atoms/Spacer';\nimport { RoomCard } from './builders/RoomCard';\nimport { UserCard } from './builders/UserCard';\nimport { useStyleSheet } from './hooks/Theme';\nimport { fontStyles } from './styles/Font';\n\ntype Props = {\n  isDark: boolean;\n  toggleTheme: () => void;\n};\n\nexport const Root: React.FC<Props> = ({ isDark, toggleTheme }) => {\n  const [userName, setUserName] = useState<string>('');\n  const styles = useStyleSheet(createStyleSheet);\n\n  const { voteValue, vote, room, userId, reset } = useRoom(userName);\n\n  const updateUserName = useCallback(\n    (newName: string) => {\n      setUserName(newName);\n      AsyncStorage.setItem('username', newName);\n    },\n    [setUserName],\n  );\n\n  useEffect(() => {\n    AsyncStorage.getItem('username').then((savedName) => {\n      if (savedName) {\n        setUserName(savedName);\n      }\n    });\n  }, []);\n\n  return (\n    <Surface style={styles.page}>\n      <Surface style={styles.canvas}>\n        <View style={styles.head}>\n          <Text style={fontStyles.headline3}>{'Planning Poker 🎲'}</Text>\n          <View style={styles.switchWrapper}>\n            <Switch value={isDark} onChange={toggleTheme} />\n          </View>\n        </View>\n        <View style={styles.divider} />\n        <FlexWrapRow mode=\"space-evenly\">\n          <View style={styles.flexRow}>\n            <RoomCard roomId={room.id} />\n          </View>\n          <Spacer medium />\n          <View style={styles.flexRow}>\n            <UserCard username={userName} onUsernameChange={updateUserName} />\n          </View>\n        </FlexWrapRow>\n        <ResetButton onPress={reset} />\n        <View>\n          <Spacer />\n          <VoteValues\n            onValuePress={vote}\n            isDark={isDark}\n            selectedValue={voteValue}\n          />\n          <Spacer />\n        </View>\n        <Results users={Object.values(room.users)} userId={userId} />\n      </Surface>\n    </Surface>\n  );\n};\n\nconst createStyleSheet = (theme: Theme) =>\n  StyleSheet.create({\n    canvas: {\n      alignItems: 'center',\n      height: '100%',\n      paddingHorizontal: 16,\n      paddingVertical: 16,\n      width: wp('90%'),\n    },\n    divider: {\n      alignSelf: 'stretch',\n      borderBottomColor: theme.dark\n        ? theme.colors.accent\n        : theme.colors.primary,\n      borderBottomWidth: 2,\n    },\n    fillWidth: { alignSelf: 'stretch' },\n    flexRow: { flex: 1, height: '100%' },\n    head: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      width: '100%',\n    },\n    page: {\n      alignItems: 'center',\n      backgroundColor: theme.colors.primary,\n      flex: 1,\n      paddingBottom: 32,\n    },\n    switchWrapper: {\n      flexDirection: 'column',\n      justifyContent: 'center',\n      marginHorizontal: 16,\n    },\n  });\n","import { DarkTheme, DefaultTheme, Theme } from 'react-native-paper';\n\nconst light: Theme = {\n  ...DefaultTheme,\n  colors: {\n    ...DefaultTheme.colors,\n    primary: '#00838f',\n    accent: '#FfCDD2',\n  },\n};\n\nconst dark: Theme = {\n  ...DarkTheme,\n  colors: {\n    ...DarkTheme.colors,\n    primary: '#005662',\n    accent: '#cb9ca1',\n  },\n};\n\nexport default { light, dark };\n","import { useFonts } from '@use-expo/font';\nimport { AppLoading } from 'expo';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { AsyncStorage } from 'react-native';\nimport { AppearanceProvider } from 'react-native-appearance';\nimport { Provider as PaperProvider } from 'react-native-paper';\n\nimport { Root } from './src/Root';\nimport { useSystemDarkMode } from './src/hooks/Theme';\nimport Theme from './src/styles/Theme';\n\nexport default () => {\n  const isSystemDark = useSystemDarkMode();\n  const [isDark, setIsDark] = useState(isSystemDark);\n\n  const [fontsLoaded] = useFonts({\n    Poppins: require('./assets/fonts/Poppins-Regular.ttf'),\n  });\n\n  const toggleTheme = useCallback(() => {\n    setIsDark(!isDark);\n    AsyncStorage.setItem('isDark', JSON.stringify(!isDark));\n  }, [isDark, setIsDark]);\n\n  useEffect(() => {\n    AsyncStorage.getItem('isDark').then((savedIsDark) => {\n      if (savedIsDark) setIsDark(JSON.parse(savedIsDark));\n    });\n  }, []);\n\n  if (!fontsLoaded) {\n    return <AppLoading />;\n  }\n\n  return (\n    <AppearanceProvider>\n      <PaperProvider theme={isDark ? Theme.dark : Theme.light}>\n        <Root isDark={isDark} toggleTheme={toggleTheme} />\n      </PaperProvider>\n    </AppearanceProvider>\n  );\n};\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/PlanningPokerApp/expo-service-worker.js', { scope: '/PlanningPokerApp/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"./fonts/Poppins-Regular.ttf\";"],"sourceRoot":""}