{"version":3,"sources":["src/hooks/Theme.ts","src/styles/Font.ts","src/atoms/UserName.tsx","src/ResultCard.tsx","shared/model/Message.ts","src/atoms/Row.tsx","src/Results.tsx","src/UrlHandler.ts","ConfigConstants.ts","src/RoomHandler.ts","src/VoteValues.tsx","src/atoms/ResetButton.tsx","src/styles/Constants.ts","src/atoms/Spacer.tsx","src/builders/RoomCard.tsx","src/builders/UserCard.tsx","src/Root.tsx","src/styles/Theme.ts","App.tsx","web-build/register-service-worker.js","assets/fonts/Poppins-Regular.ttf"],"names":["useSystemDarkMode","useState","Appearance","getColorScheme","isSystemDark","setSystemDark","useEffect","subscription","addChangeListener","colorScheme","remove","useStyleSheet","createStyleSheet","theme","useTheme","styles","setStyles","fontStyles","StyleSheet","create","body1","fontFamily","fontSize","fontWeight","letterSpacing","body2","button","caption","headline1","headline2","headline3","headline4","headline5","headline6","overline","subtitle1","subtitle2","UpdatableUserName","value","onChangeText","isActive","setIsActive","inlineInputRef","useRef","toggleIsActive","useCallback","length","wasActive","current","focus","View","style","updatableUserNameContainer","flex","TextInput","ref","paddingHorizontal","onSubmitEditing","TouchableOpacity","onPress","buttonText","userName","FixedUserName","userCardSubtitleContainer","subtitle","numberOfLines","backgroundColor","colors","surface","borderRadius","roundness","marginLeft","paddingVertical","color","dark","accent","primary","alignItems","flexDirection","padding","flexShrink","minHeight","userCardTitleContainer","justifyContent","MessageType","AvatarWatermark","avatarWatermark","ResultCard","onUserNameChange","resultValue","showAvatar","username","isExtreme","displayValue","avatarDecoration","resultCard","resultCardTitleContainer","borderWidth","borderColor","position","top","right","elevation","height","margin","overflow","width","FlexWrapRow","children","mode","flexWrapRow","alignSelf","flexWrap","marginVertical","Results","users","userId","sortedUsers","sort","a","b","voteValueToNumber","voteValue","minVoteValue","maxVoteValue","map","user","isCurrentUser","id","undefined","key","v","Number","MAX_SAFE_INTEGER","Colors","useRoom","ws","WebSocket","roomId","search","window","location","URLSearchParams","get","useUrlParam","setVoteValue","setUserId","Platform","OS","UUID","toString","name","admin","room","setRoom","send","msg","JSON","stringify","onopen","joinRequest","type","JoinRequest","payload","onmessage","event","data","parse","JoinResponse","RoomUpdate","__DEV__","console","log","onerror","error","readyState","OPEN","updateNameRequest","SetName","reset","Reset","vote","newVoteValue","SetVoteValue","values","ValueCard","isDark","greyedOut","onCardPress","valueContainer","getColorForValue","valueCard","DarkDisabled","LightDisabled","DarkZero","LightZero","DarkOne","LightOne","DarkTwo","LightTwo","DarkThree","LightThree","DarkFive","LightFive","DarkEight","LightEight","DarkThirteen","LightThirteen","DarkTwentyOne","LightTwentyOne","DarkUnknown","LightUnknown","VoteValues","onValuePress","selectedValue","container","marginHorizontal","ResetButton","icon","constants","small","standard","medium","large","extraLarge","S","spacingSmall","C","spacingStandard","spacingMedium","spacingLarge","spacingExtraLarge","Spacer","RoomCard","clipTextOverflow","background","UserCard","label","Root","toggleTheme","setUserName","updateUserName","newName","AsyncStorage","setItem","getItem","then","savedName","page","canvas","head","switchWrapper","onChange","divider","flexRow","Object","wp","borderBottomColor","borderBottomWidth","fillWidth","paddingBottom","light","DefaultTheme","DarkTheme","setIsDark","useFonts","Poppins","require","fontsLoaded","savedIsDark","Theme","AppLoading","navigator","addEventListener","serviceWorker","register","scope","info","catch","module","exports"],"mappings":"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","file":"static/js/app.171911ee.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { ImageStyle, StyleSheet, TextStyle, ViewStyle } from 'react-native';\nimport { Appearance } from 'react-native-appearance';\nimport { Theme, useTheme } from 'react-native-paper';\n\nexport const useSystemDarkMode = () => {\n  const [isSystemDark, setSystemDark] = useState<boolean>(\n    Appearance.getColorScheme() === 'dark',\n  );\n\n  useEffect(() => {\n    const subscription = Appearance.addChangeListener(({ colorScheme }) => {\n      setSystemDark(colorScheme === 'dark');\n    });\n\n    return () => subscription.remove();\n  }, []);\n\n  return isSystemDark;\n};\n\nexport const useManualDarkMode = () => {\n  const isSystemDark = useSystemDarkMode();\n  const [isDark, setIsDark] = useState(isSystemDark);\n\n  useEffect(() => {\n    setIsDark(isSystemDark);\n  }, [isSystemDark]);\n\n  return [isDark, setIsDark];\n};\n\nexport const useStyleSheet = <T>(createStyleSheet: (theme: Theme) => T) => {\n  const theme = useTheme();\n  const [styles, setStyles] = useState<T>(createStyleSheet(theme));\n\n  useEffect(() => {\n    setStyles(createStyleSheet(theme));\n  }, [createStyleSheet, theme]);\n\n  return styles;\n};\n","import { StyleSheet } from 'react-native';\n\nexport const fontStyles = StyleSheet.create({\n  body1: {\n    fontFamily: 'Poppins',\n    fontSize: 16,\n    fontWeight: '400',\n    letterSpacing: 0.5,\n  },\n  body2: {\n    fontFamily: 'Poppins',\n    fontSize: 14,\n    fontWeight: '400',\n    letterSpacing: 0.25,\n  },\n  button: {\n    fontFamily: 'Poppins',\n    fontSize: 14,\n    fontWeight: '500',\n    letterSpacing: 1.25,\n  },\n  caption: {\n    fontFamily: 'Poppins',\n    fontSize: 12,\n    fontWeight: '400',\n    letterSpacing: 0.4,\n  },\n  headline1: {\n    fontFamily: 'Poppins',\n    fontSize: 96,\n    fontWeight: '300',\n    letterSpacing: -1.5,\n  },\n  headline2: {\n    fontFamily: 'Poppins',\n    fontSize: 60,\n    fontWeight: '300',\n    letterSpacing: -0.5,\n  },\n  headline3: {\n    fontFamily: 'Poppins',\n    fontSize: 48,\n    fontWeight: '400',\n    letterSpacing: 0,\n  },\n  headline4: {\n    fontFamily: 'Poppins',\n    fontSize: 34,\n    fontWeight: '400',\n    letterSpacing: 0.25,\n  },\n  headline5: {\n    fontFamily: 'Poppins',\n    fontSize: 24,\n    fontWeight: '400',\n    letterSpacing: 0,\n  },\n  headline6: {\n    fontFamily: 'Poppins',\n    fontSize: 20,\n    fontWeight: '500',\n    letterSpacing: 0.15,\n  },\n  overline: {\n    fontFamily: 'Poppins',\n    fontSize: 10,\n    fontWeight: '400',\n    letterSpacing: 1.5,\n  },\n  subtitle1: {\n    fontFamily: 'Poppins',\n    fontSize: 16,\n    fontWeight: '400',\n    letterSpacing: 0.15,\n  },\n  subtitle2: {\n    fontFamily: 'Poppins',\n    fontSize: 14,\n    fontWeight: '500',\n    letterSpacing: 0.1,\n  },\n});\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { StyleSheet, TextInput, TouchableOpacity, View } from 'react-native';\nimport { Text, Theme } from 'react-native-paper';\n\nimport { useStyleSheet } from '../hooks/Theme';\nimport { fontStyles } from '../styles/Font';\n\ntype UpdatableUserNameProps = {\n  value?: string;\n  onChangeText: (text: string) => void;\n};\n\nexport const UpdatableUserName: React.FC<UpdatableUserNameProps> = ({\n  value,\n  onChangeText,\n}) => {\n  const styles = useStyleSheet(createStyleSheet);\n  const [isActive, setIsActive] = useState<boolean>(false);\n  const inlineInputRef = useRef<TextInput>(null);\n\n  const toggleIsActive = useCallback(() => {\n    if (value?.length === 0) {\n      onChangeText('Guest');\n    }\n    setIsActive((wasActive) => !wasActive);\n  }, [onChangeText, value]);\n\n  useEffect(() => {\n    if (isActive) {\n      // Imperative method used to focus the text input\n      // eslint-disable-next-line no-unused-expressions\n      inlineInputRef.current?.focus();\n    }\n  }, [isActive]);\n\n  if (!isActive) {\n    return (\n      <TouchableOpacity onPress={toggleIsActive}>\n        <FixedUserName userName={value} />\n      </TouchableOpacity>\n    );\n  }\n\n  return (\n    <View style={styles.updatableUserNameContainer}>\n      <View style={{ flex: 1 }}>\n        <TextInput\n          ref={inlineInputRef}\n          style={{ paddingHorizontal: 4 }}\n          value={value}\n          onChangeText={onChangeText}\n          onSubmitEditing={toggleIsActive}\n        />\n      </View>\n      <TouchableOpacity onPress={toggleIsActive} style={styles.button}>\n        <Text style={[fontStyles.overline, styles.buttonText]}>{'OK'}</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nexport const FixedUserName: React.FC<{ userName?: string }> = ({\n  userName,\n}) => {\n  const styles = useStyleSheet(createStyleSheet);\n  return (\n    <View style={styles.userCardSubtitleContainer}>\n      <Text style={styles.subtitle} numberOfLines={1}>\n        {userName}\n      </Text>\n    </View>\n  );\n};\n\nconst createStyleSheet = (theme: Theme) =>\n  StyleSheet.create({\n    button: {\n      backgroundColor: theme.colors.surface,\n      borderRadius: theme.roundness,\n      marginLeft: 8,\n      paddingHorizontal: 8,\n      paddingVertical: 4,\n    },\n    buttonText: {\n      color: theme.dark ? theme.colors.accent : theme.colors.primary,\n      fontWeight: '900',\n    },\n    subtitle: { ...fontStyles.body1, color: theme.dark ? 'black' : 'white' },\n    updatableUserNameContainer: {\n      alignItems: 'center',\n      backgroundColor: theme.dark ? theme.colors.accent : theme.colors.primary,\n      flexDirection: 'row',\n      padding: 4,\n    },\n    userCardSubtitleContainer: {\n      alignItems: 'center',\n      backgroundColor: theme.dark ? theme.colors.accent : theme.colors.primary,\n      flexShrink: 1,\n      minHeight: 32,\n      paddingHorizontal: 4,\n      paddingVertical: 8,\n    },\n    userCardTitleContainer: {\n      alignItems: 'center',\n      flex: 1,\n      justifyContent: 'center',\n    },\n  });\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Surface, Text, Theme } from 'react-native-paper';\nimport { red100 } from 'react-native-paper/lib/typescript/src/styles/colors';\n\nimport { VoteValue } from '../shared/model/User';\n\nimport { FixedUserName, UpdatableUserName } from './atoms/UserName';\nimport { useStyleSheet } from './hooks/Theme';\nimport { fontStyles } from './styles/Font';\n\nconst AvatarWatermark: React.FC = () => {\n  const styles = useStyleSheet(createStyleSheet);\n  return (\n    <View style={styles.avatarWatermark}>\n      <Text style={fontStyles.body2}>{'👤'}</Text>\n    </View>\n  );\n};\n\ntype Props = {\n  showAvatar: boolean;\n  resultValue: VoteValue;\n  username: string;\n  isExtreme: boolean;\n  onUserNameChange: (text: string) => void;\n};\n\nexport const ResultCard: React.FC<Props> = ({\n  onUserNameChange,\n  resultValue,\n  showAvatar,\n  username,\n  isExtreme,\n}) => {\n  const styles = useStyleSheet(createStyleSheet);\n\n  const displayValue =\n    resultValue && resultValue !== 'hidden' ? resultValue : '?';\n\n  return (\n    <Surface\n      style={[\n        showAvatar && styles.avatarDecoration,\n        styles.resultCard,\n        isExtreme && styles.isExtreme,\n      ]}\n    >\n      {showAvatar && <AvatarWatermark />}\n      <View style={styles.resultCardTitleContainer}>\n        <Text style={fontStyles.headline3}>{displayValue}</Text>\n      </View>\n      {showAvatar ? (\n        <UpdatableUserName value={username} onChangeText={onUserNameChange} />\n      ) : (\n        <FixedUserName userName={username} />\n      )}\n    </Surface>\n  );\n};\n\nconst createStyleSheet = (theme: Theme) =>\n  StyleSheet.create({\n    avatarDecoration: {\n      borderWidth: 2,\n      borderColor: theme.dark ? theme.colors.accent : theme.colors.primary,\n    },\n    avatarWatermark: {\n      position: 'absolute',\n      top: 4,\n      right: 4,\n    },\n    resultCard: {\n      borderRadius: theme.roundness * 2,\n      elevation: 8,\n      height: 150,\n      margin: 8,\n      overflow: 'hidden',\n      width: 100,\n    },\n    resultCardTitleContainer: {\n      alignItems: 'center',\n      flex: 1,\n      justifyContent: 'center',\n    },\n    isExtreme: {\n      borderColor: 'red',\n    },\n    subtitle: { ...fontStyles.body1, color: theme.dark ? 'black' : 'white' },\n  });\n","import { Room } from './Room';\nimport { VoteValue } from './User';\n\nexport type Message =\n  | IJoinRequestMessage\n  | IJoinResponseMessage\n  | ILeaveRequestMessage\n  | IResetMessage\n  | IRoomUpdateMessage\n  | ISetNameMessage\n  | ISetVoteValueMessage;\n\nexport enum MessageType {\n  JoinRequest,\n  JoinResponse,\n  LeaveRequest,\n  Reset,\n  RoomUpdate,\n  SetName,\n  SetVoteValue,\n}\n\nexport interface IJoinRequestMessage {\n  type: MessageType.JoinRequest;\n  roomId: string;\n  payload: {\n    name: string;\n  };\n}\n\nexport interface IJoinResponseMessage {\n  type: MessageType.JoinResponse;\n  roomId: string;\n  payload: {\n    userId: string;\n  };\n}\n\nexport interface ISetVoteValueMessage {\n  type: MessageType.SetVoteValue;\n  roomId: string;\n  payload: {\n    voteValue: VoteValue;\n  };\n}\n\nexport interface ISetNameMessage {\n  type: MessageType.SetName;\n  roomId: string;\n  payload: {\n    name: string;\n  };\n}\n\nexport interface ILeaveRequestMessage {\n  type: MessageType.LeaveRequest;\n  roomId: string;\n}\n\nexport interface IRoomUpdateMessage {\n  type: MessageType.RoomUpdate;\n  roomId: string;\n  payload: {\n    room: Room;\n  };\n}\n\nexport interface IResetMessage {\n  type: MessageType.Reset;\n  roomId: string;\n}\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\ntype FlexWrapRowProps = {\n  mode?:\n    | 'flex-start'\n    | 'flex-end'\n    | 'center'\n    | 'space-between'\n    | 'space-around'\n    | 'space-evenly';\n};\n\nexport const FlexWrapRow: React.FC<FlexWrapRowProps> = ({ children, mode }) => {\n  return (\n    <View style={[styles.flexWrapRow, { justifyContent: mode }]}>\n      {children}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  flexWrapRow: {\n    alignItems: 'center',\n    alignSelf: 'stretch',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginVertical: 16,\n  },\n});\n","import React from 'react';\n\nimport { User, VoteValue } from '../shared/model/User';\n\nimport { ResultCard } from './ResultCard';\nimport { FlexWrapRow } from './atoms/Row';\n\ntype Props = {\n  users: User[];\n  userId?: string;\n  userName?: string;\n  onUserNameChange: (text: string) => void;\n};\n\nexport const Results: React.FC<Props> = ({\n  users,\n  userId,\n  onUserNameChange,\n}) => {\n  const sortedUsers = users.sort(\n    (a: User, b: User) =>\n      voteValueToNumber(a.voteValue) - voteValueToNumber(b.voteValue),\n  );\n  const minVoteValue = sortedUsers.length ? sortedUsers[0].voteValue : 0;\n  const maxVoteValue = sortedUsers.length\n    ? sortedUsers[sortedUsers.length - 1].voteValue\n    : 0;\n  return (\n    <FlexWrapRow mode=\"center\">\n      {sortedUsers.map((user) => {\n        const isCurrentUser = user.id === userId;\n        const isDisplayValue =\n          user.voteValue !== undefined && user.voteValue !== 'hidden';\n        const isExtreme =\n          isDisplayValue &&\n          minVoteValue !== maxVoteValue &&\n          (user.voteValue === minVoteValue || user.voteValue === maxVoteValue);\n        return (\n          <ResultCard\n            key={user.id}\n            resultValue={user.voteValue}\n            showAvatar={isCurrentUser}\n            username={user.userName}\n            isExtreme={isExtreme}\n            onUserNameChange={onUserNameChange}\n          />\n        );\n      })}\n    </FlexWrapRow>\n  );\n};\n\nconst voteValueToNumber = (v: VoteValue) => {\n  switch (typeof v) {\n    case 'number':\n      return v;\n    default:\n      return Number.MAX_SAFE_INTEGER;\n  }\n};\n","export const useUrlParam = (key: string) => {\n  const search = window.location.search;\n\n  const params = new URLSearchParams(search);\n\n  return params.get(key) || undefined;\n};\n","export enum Colors {\n  DarkZero = '#97b498',\n  DarkOne = '#94cc7d',\n  DarkTwo = '#69cb30',\n  DarkThree = '#c8cc00',\n  DarkFive = '#b27500',\n  DarkEight = '#a10000',\n  DarkThirteen = '#a252b7',\n  DarkTwentyOne = '#8a8a8a',\n  DarkUnknown = '#000000',\n  DarkDisabled = '#333',\n  LightZero = '#c8e6c9',\n  LightOne = '#C6FFAD',\n  LightTwo = '#9EFF64',\n  LightThree = '#FFFF3C',\n  LightFive = '#E9A426',\n  LightEight = '#DB0000',\n  LightThirteen = '#D581EA',\n  LightTwentyOne = '#BABABA',\n  LightUnknown = '#FFFFFF',\n  LightDisabled = '#ccc',\n}\n","import UUID from 'pure-uuid';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { Platform } from 'react-native';\n\nimport {\n  IJoinRequestMessage,\n  IResetMessage,\n  ISetNameMessage,\n  ISetVoteValueMessage,\n  Message,\n  MessageType,\n} from '../shared/model/Message';\nimport { Room } from '../shared/model/Room';\nimport { VoteValue } from '../shared/model/User';\n\nimport { useUrlParam } from './UrlHandler';\n\n// Connect to Heroku 🧙‍♂️ (Update the port)\nconst SERVER_HOST = __DEV__\n  ? 'ws://localhost:8999'\n  : 'wss://planningpokerserver.herokuapp.com/';\n\nconst createEmptyRoom = (id: string): Room => ({\n  id,\n  name: '',\n  users: {},\n  admin: undefined,\n});\n\nexport const useRoom = (userName: string) => {\n  const ws = useRef(new WebSocket(SERVER_HOST)).current;\n  const roomId = useUrlParam('roomId');\n  const [voteValue, setVoteValue] = useState<VoteValue>();\n  const [userId, setUserId] = useState<string>();\n\n  if (Platform.OS === 'web' && !roomId) {\n    window.location.search = 'roomId=' + new UUID(4).toString();\n  }\n\n  const [room, setRoom] = useState(\n    createEmptyRoom(roomId || new UUID(4).toString()),\n  );\n\n  userName = userName || 'Guest';\n\n  const send = useCallback((msg: any) => ws.send(JSON.stringify(msg)), [ws]);\n\n  useEffect(() => {\n    ws.onopen = () => {\n      if (__DEV__) {\n        // eslint-disable-next-line no-console\n        console.log('Opened WebSocket connection');\n      }\n\n      const joinRequest: IJoinRequestMessage = {\n        type: MessageType.JoinRequest,\n        roomId: room.id,\n        payload: {\n          name: userName,\n        },\n      };\n      send(joinRequest);\n    };\n    ws.onmessage = (event) => {\n      if (event.data === 'Heartbeat') {\n        // eslint-disable-next-line\n        console.log('Received heartbeat from server');\n        return;\n      }\n\n      const msg: Message = JSON.parse(event.data);\n\n      if (__DEV__) {\n        // eslint-disable-next-line no-console\n        console.log('Received message: ', msg);\n      }\n\n      switch (msg.type) {\n        case MessageType.JoinResponse: {\n          setUserId(msg.payload.userId);\n          break;\n        }\n        case MessageType.RoomUpdate: {\n          if (__DEV__) {\n            // eslint-disable-next-line no-console\n            console.log('Updating room');\n          }\n          setRoom(msg.payload.room);\n          if (userId && msg.payload.room.users[userId].voteValue !== 'hidden') {\n            setVoteValue(msg.payload.room.users[userId].voteValue);\n          }\n          break;\n        }\n        default:\n      }\n    };\n    ws.onerror = (error) => {\n      if (__DEV__) {\n        // eslint-disable-next-line no-console\n        console.error('Error: ', error);\n      }\n      // setErrorMessage({ title: 'Oops!', message: 'Something went wrong...' });\n    };\n  }, [room.id, send, userId, userName, ws]);\n\n  useEffect(() => {\n    if (ws.readyState === WebSocket.OPEN) {\n      const updateNameRequest: ISetNameMessage = {\n        type: MessageType.SetName,\n        roomId: room.id,\n        payload: {\n          name: userName,\n        },\n      };\n      send(updateNameRequest);\n    }\n  }, [room.id, send, userName, ws.readyState]);\n\n  const vote = (newVoteValue: VoteValue) => {\n    setVoteValue(newVoteValue);\n    const msg: ISetVoteValueMessage = {\n      type: MessageType.SetVoteValue,\n      roomId: room.id,\n      payload: {\n        voteValue: newVoteValue,\n      },\n    };\n    send(msg);\n  };\n\n  const reset = () => {\n    setVoteValue(undefined);\n    const msg: IResetMessage = {\n      type: MessageType.Reset,\n      roomId: room.id,\n    };\n    send(msg);\n  };\n\n  return {\n    reset,\n    room,\n    userId,\n    vote,\n    voteValue,\n  };\n};\n","import React, { useCallback } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { useColorScheme } from 'react-native-appearance';\nimport { Card, Text, Theme } from 'react-native-paper';\n\nimport { Colors } from '../ConfigConstants';\nimport { VoteValue } from '../shared/model/User';\n\nimport { FlexWrapRow } from './atoms/Row';\nimport { useStyleSheet } from './hooks/Theme';\nimport { fontStyles } from './styles/Font';\n\ntype Props = {\n  value: VoteValue;\n  onPress: (value: VoteValue) => void;\n  isDark: boolean;\n  greyedOut: boolean;\n};\n\nconst values: VoteValue[] = [0, 1, 2, 3, 5, 8, 13, 21, '🤔'];\n\nexport const ValueCard: React.FC<Props> = ({\n  value,\n  onPress,\n  isDark,\n  greyedOut,\n}) => {\n  const styles = useStyleSheet(createStyleSheet);\n  const onCardPress = useCallback(() => onPress(value), [onPress, value]);\n\n  return (\n    <Card\n      style={[\n        styles.valueContainer,\n        {\n          backgroundColor: greyedOut\n            ? getColorForValue(-1, isDark)\n            : getColorForValue(value, isDark),\n        },\n      ]}\n      onPress={onCardPress}\n    >\n      <View style={styles.valueCard}>\n        <Text style={[fontStyles.subtitle1, { fontWeight: '900' }]}>\n          {value}\n        </Text>\n      </View>\n    </Card>\n  );\n};\n\nconst getColorForValue = (value: VoteValue, dark: boolean): Colors => {\n  switch (value) {\n    case -1:\n      return dark ? Colors.DarkDisabled : Colors.LightDisabled;\n    case 0:\n      return dark ? Colors.DarkZero : Colors.LightZero;\n    case 1:\n      return dark ? Colors.DarkOne : Colors.LightOne;\n    case 2:\n      return dark ? Colors.DarkTwo : Colors.LightTwo;\n    case 3:\n      return dark ? Colors.DarkThree : Colors.LightThree;\n    case 5:\n      return dark ? Colors.DarkFive : Colors.LightFive;\n    case 8:\n      return dark ? Colors.DarkEight : Colors.LightEight;\n    case 13:\n      return dark ? Colors.DarkThirteen : Colors.LightThirteen;\n    case 21:\n      return dark ? Colors.DarkTwentyOne : Colors.LightTwentyOne;\n    default:\n      return dark ? Colors.DarkUnknown : Colors.LightUnknown;\n  }\n};\n\ntype ValuesProps = {\n  onValuePress: (value: VoteValue) => void;\n  selectedValue: VoteValue | undefined;\n  isDark: boolean;\n};\n\nexport const VoteValues: React.FC<ValuesProps> = ({\n  onValuePress,\n  selectedValue,\n  isDark,\n}) => {\n  return (\n    <FlexWrapRow mode=\"center\">\n      {values.map((value) => (\n        <ValueCard\n          key={value}\n          value={value}\n          onPress={onValuePress}\n          isDark={isDark}\n          greyedOut={selectedValue !== undefined && selectedValue !== value}\n        />\n      ))}\n    </FlexWrapRow>\n  );\n};\n\nconst createStyleSheet = (theme: Theme) =>\n  StyleSheet.create({\n    container: {\n      flexDirection: 'row',\n      justifyContent: 'center',\n    },\n    valueCard: {\n      alignItems: 'center',\n      borderRadius: 8,\n      height: 50,\n      justifyContent: 'center',\n      width: 50,\n    },\n    valueContainer: {\n      marginHorizontal: 8,\n      elevation: 4,\n      marginVertical: 4,\n    },\n  });\n","import React from 'react';\nimport { Button } from 'react-native-paper';\n\ninterface IProps {\n  onPress: () => void;\n}\n\nexport const ResetButton: React.FC<IProps> = ({ onPress }) => (\n  <Button icon=\"replay\" mode=\"contained\" onPress={onPress}>\n    Reset\n  </Button>\n);\n","export const constants = {\n  spacing: {\n    small: 4,\n    standard: 8,\n    medium: 16,\n    large: 32,\n    extraLarge: 64,\n  },\n};\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nimport { constants as C } from '../styles/Constants';\n\nconst S = StyleSheet.create({\n  spacingSmall: { width: C.spacing.small, height: C.spacing.small },\n  spacingStandard: { width: C.spacing.standard, height: C.spacing.standard },\n  spacingMedium: { width: C.spacing.medium, height: C.spacing.medium },\n  spacingLarge: { width: C.spacing.large, height: C.spacing.large },\n  spacingExtraLarge: {\n    width: C.spacing.extraLarge,\n    height: C.spacing.extraLarge,\n  },\n});\n\ntype Props = {\n  small?: boolean;\n  medium?: boolean;\n  large?: boolean;\n  extraLarge?: boolean;\n};\n\nexport const Spacer: React.FC<Props> = ({\n  small,\n  medium,\n  large,\n  extraLarge,\n}) => {\n  let style = S.spacingStandard;\n  if (small) style = S.spacingSmall;\n  else if (medium) style = S.spacingMedium;\n  else if (large) style = S.spacingLarge;\n  else if (extraLarge) style = S.spacingExtraLarge;\n\n  return <View style={style} />;\n};\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card, Text, Theme } from 'react-native-paper';\n\nimport { Spacer } from '../atoms/Spacer';\nimport { useStyleSheet } from '../hooks/Theme';\nimport { fontStyles } from '../styles/Font';\n\ntype RoomCardProps = {\n  roomId: string;\n};\n\nexport const RoomCard: React.FC<RoomCardProps> = ({ roomId }) => {\n  const styles = useStyleSheet(createStyleSheet);\n\n  return (\n    <Card elevation={0} style={styles.clipTextOverflow}>\n      <View style={[styles.container, styles.clipTextOverflow]}>\n        <Spacer medium />\n        <Text style={fontStyles.headline5}>Room</Text>\n        <Text\n          style={fontStyles.subtitle2}\n          numberOfLines={2}\n        >{`ID: ${roomId}`}</Text>\n        <Spacer medium />\n      </View>\n    </Card>\n  );\n};\n\nconst createStyleSheet = (theme: Theme) =>\n  StyleSheet.create({\n    container: {\n      paddingHorizontal: 8,\n      backgroundColor: theme.colors.background,\n      borderRadius: theme.roundness,\n    },\n    clipTextOverflow: { flexShrink: 1 },\n  });\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card, Text, TextInput, Theme, useTheme } from 'react-native-paper';\n\nimport { Spacer } from '../atoms/Spacer';\nimport { useStyleSheet } from '../hooks/Theme';\nimport { fontStyles } from '../styles/Font';\n\ntype UserCardProps = {\n  userName: string;\n  onUserNameChange: (value: string) => void;\n};\n\nexport const UserCard: React.FC<UserCardProps> = ({\n  userName,\n  onUserNameChange,\n}) => {\n  const styles = useStyleSheet(createStyleSheet);\n  const theme = useTheme();\n  return (\n    <Card elevation={0}>\n      <View style={styles.container}>\n        <Spacer medium />\n        <Text style={fontStyles.headline5}>User</Text>\n        <TextInput\n          style={{ backgroundColor: theme.colors.background }}\n          value={userName}\n          label={'Username'}\n          onChangeText={onUserNameChange}\n        />\n        <Spacer medium />\n      </View>\n    </Card>\n  );\n};\n\nconst createStyleSheet = (theme: Theme) =>\n  StyleSheet.create({\n    container: {\n      paddingHorizontal: 8,\n      backgroundColor: theme.colors.background,\n      borderRadius: theme.roundness * 2,\n    },\n  });\n","import Switch from 'expo-dark-mode-switch';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { AsyncStorage, StyleSheet, View } from 'react-native';\nimport { Surface, Text, Theme } from 'react-native-paper';\nimport { widthPercentageToDP as wp } from 'react-native-responsive-screen';\n\nimport { Results } from './Results';\nimport { useRoom } from './RoomHandler';\nimport { VoteValues } from './VoteValues';\nimport { ResetButton } from './atoms/ResetButton';\nimport { FlexWrapRow } from './atoms/Row';\nimport { Spacer } from './atoms/Spacer';\nimport { RoomCard } from './builders/RoomCard';\nimport { UserCard } from './builders/UserCard';\nimport { useStyleSheet } from './hooks/Theme';\nimport { fontStyles } from './styles/Font';\n\ntype Props = {\n  isDark: boolean;\n  toggleTheme: () => void;\n};\n\nexport const Root: React.FC<Props> = ({ isDark, toggleTheme }) => {\n  const [userName, setUserName] = useState<string>('');\n  const styles = useStyleSheet(createStyleSheet);\n\n  const { voteValue, vote, room, userId, reset } = useRoom(userName);\n\n  const updateUserName = useCallback(\n    (newName: string) => {\n      setUserName(newName);\n      AsyncStorage.setItem('username', newName);\n    },\n    [setUserName],\n  );\n\n  useEffect(() => {\n    AsyncStorage.getItem('username').then((savedName) => {\n      if (savedName) {\n        setUserName(savedName);\n      }\n    });\n  }, []);\n\n  return (\n    <Surface style={styles.page}>\n      <Surface style={styles.canvas}>\n        <View style={styles.head}>\n          <Text style={fontStyles.headline3}>{'Planning Poker 🎲'}</Text>\n          <View style={styles.switchWrapper}>\n            <Switch value={isDark} onChange={toggleTheme} />\n          </View>\n        </View>\n        <View style={styles.divider} />\n        <FlexWrapRow mode=\"space-evenly\">\n          <View style={styles.flexRow}>\n            <RoomCard roomId={room.id} />\n          </View>\n          <Spacer medium />\n          <View style={styles.flexRow}>\n            <UserCard userName={userName} onUserNameChange={updateUserName} />\n          </View>\n        </FlexWrapRow>\n        <ResetButton onPress={reset} />\n        <View>\n          <Spacer />\n          <VoteValues\n            onValuePress={vote}\n            isDark={isDark}\n            selectedValue={voteValue}\n          />\n          <Spacer />\n        </View>\n        <Results\n          users={Object.values(room.users)}\n          userId={userId}\n          userName={userName}\n          onUserNameChange={updateUserName}\n        />\n      </Surface>\n    </Surface>\n  );\n};\n\nconst createStyleSheet = (theme: Theme) =>\n  StyleSheet.create({\n    canvas: {\n      alignItems: 'center',\n      height: '100%',\n      paddingHorizontal: 16,\n      paddingVertical: 16,\n      width: wp('90%'),\n    },\n    divider: {\n      alignSelf: 'stretch',\n      borderBottomColor: theme.dark\n        ? theme.colors.accent\n        : theme.colors.primary,\n      borderBottomWidth: 2,\n    },\n    fillWidth: { alignSelf: 'stretch' },\n    flexRow: { flex: 1, height: '100%' },\n    head: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      width: '100%',\n    },\n    page: {\n      alignItems: 'center',\n      backgroundColor: theme.colors.primary,\n      flex: 1,\n      paddingBottom: 32,\n    },\n    switchWrapper: {\n      flexDirection: 'column',\n      justifyContent: 'center',\n      marginHorizontal: 16,\n    },\n  });\n","import { DarkTheme, DefaultTheme, Theme } from 'react-native-paper';\n\nconst light: Theme = {\n  ...DefaultTheme,\n  colors: {\n    ...DefaultTheme.colors,\n    primary: '#00838f',\n    accent: '#FfCDD2',\n  },\n};\n\nconst dark: Theme = {\n  ...DarkTheme,\n  colors: {\n    ...DarkTheme.colors,\n    primary: '#005662',\n    accent: '#cb9ca1',\n  },\n};\n\nexport default { light, dark };\n","import { useFonts } from '@use-expo/font';\nimport { AppLoading } from 'expo';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { AsyncStorage } from 'react-native';\nimport { AppearanceProvider } from 'react-native-appearance';\nimport { Provider as PaperProvider } from 'react-native-paper';\n\nimport { Root } from './src/Root';\nimport { useSystemDarkMode } from './src/hooks/Theme';\nimport Theme from './src/styles/Theme';\n\nexport default () => {\n  const isSystemDark = useSystemDarkMode();\n  const [isDark, setIsDark] = useState(isSystemDark);\n\n  const [fontsLoaded] = useFonts({\n    Poppins: require('./assets/fonts/Poppins-Regular.ttf'),\n  });\n\n  const toggleTheme = useCallback(() => {\n    setIsDark(!isDark);\n    AsyncStorage.setItem('isDark', JSON.stringify(!isDark));\n  }, [isDark, setIsDark]);\n\n  useEffect(() => {\n    AsyncStorage.getItem('isDark').then((savedIsDark) => {\n      if (savedIsDark) setIsDark(JSON.parse(savedIsDark));\n    });\n  }, []);\n\n  if (!fontsLoaded) {\n    return <AppLoading />;\n  }\n\n  return (\n    <AppearanceProvider>\n      <PaperProvider theme={isDark ? Theme.dark : Theme.light}>\n        <Root isDark={isDark} toggleTheme={toggleTheme} />\n      </PaperProvider>\n    </AppearanceProvider>\n  );\n};\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/PlanningPokerApp/expo-service-worker.js', { scope: '/PlanningPokerApp/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"./fonts/Poppins-Regular.ttf\";"],"sourceRoot":""}