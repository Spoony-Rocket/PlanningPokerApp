{"version":3,"sources":["src/atoms/Row.tsx","src/hooks/Theme.ts","src/styles/Font.ts","src/Results.tsx","shared/model/Message.ts","src/UrlHandler.ts","ConfigConstants.ts","src/RoomHandler.ts","src/VoteValues.tsx","src/styles/Constants.ts","src/atoms/Spacer.tsx","src/builders/RoomCard.tsx","src/builders/UserCard.tsx","src/Root.tsx","src/styles/Theme.ts","App.tsx","web-build/register-service-worker.js","assets/fonts/Poppins-Regular.ttf"],"names":["FlexWrapRow","children","mode","View","style","styles","flexWrapRow","justifyContent","StyleSheet","create","alignItems","alignSelf","flexDirection","flexWrap","marginVertical","useSystemDarkMode","useState","Appearance","getColorScheme","isSystemDark","setSystemDark","useEffect","subscription","addChangeListener","colorScheme","remove","useStyleSheet","createStyleSheet","theme","useTheme","setStyles","fontStyles","body1","fontFamily","fontSize","fontWeight","letterSpacing","body2","button","caption","headline1","headline2","headline3","headline4","headline5","headline6","overline","subtitle1","subtitle2","MessageType","Results","users","renderUser","useCallback","user","displayValue","voteValue","key","id","userCard","userCardTitleContainer","userCardSubtitleContainer","subtitle","numberOfLines","userName","map","color","dark","borderRadius","roundness","elevation","height","margin","overflow","width","flex","backgroundColor","colors","accent","primary","flexShrink","paddingHorizontal","Colors","useRoom","ws","useRef","WebSocket","current","roomId","search","window","location","URLSearchParams","get","undefined","useUrlParam","setVoteValue","Platform","OS","UUID","toString","name","admin","room","setRoom","send","msg","JSON","stringify","onopen","joinRequest","type","JoinRequest","payload","onmessage","event","data","parse","RoomUpdate","__DEV__","console","log","onerror","error","readyState","OPEN","updateNameRequest","SetName","vote","newVoteValue","SetVoteValue","values","ValueCard","value","onPress","isDark","greyedOut","onCardPress","valueContainer","getColorForValue","valueCard","DarkDisabled","LightDisabled","DarkZero","LightZero","DarkOne","LightOne","DarkTwo","LightTwo","DarkThree","LightThree","DarkFive","LightFive","DarkEight","LightEight","DarkThirteen","LightThirteen","DarkTwentyOne","LightTwentyOne","DarkUnknown","LightUnknown","VoteValues","onValuePress","selectedValue","container","marginHorizontal","constants","small","standard","medium","large","extraLarge","S","spacingSmall","C","spacingStandard","spacingMedium","spacingLarge","spacingExtraLarge","Spacer","RoomCard","clipTextOverflow","background","UserCard","username","Root","toggleTheme","setUserName","updateUserName","newName","AsyncStorage","setItem","getItem","then","savedName","page","canvas","head","switchWrapper","onChange","divider","flexRow","fillWidth","label","onChangeText","Object","paddingVertical","wp","borderBottomColor","borderBottomWidth","paddingBottom","light","DefaultTheme","DarkTheme","setIsDark","useFonts","Poppins","require","fontsLoaded","savedIsDark","Theme","AppLoading","navigator","addEventListener","serviceWorker","register","scope","info","catch","module","exports"],"mappings":"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","file":"static/js/app.bf12b3c5.chunk.js","sourcesContent":["import React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\ntype FlexWrapRowProps = {\n  mode?:\n    | 'flex-start'\n    | 'flex-end'\n    | 'center'\n    | 'space-between'\n    | 'space-around'\n    | 'space-evenly';\n};\n\nexport const FlexWrapRow: React.FC<FlexWrapRowProps> = ({ children, mode }) => {\n  return (\n    <View style={[styles.flexWrapRow, { justifyContent: mode }]}>\n      {children}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  flexWrapRow: {\n    alignItems: 'center',\n    alignSelf: 'stretch',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginVertical: 16,\n  },\n});\n","import React, { useEffect, useState } from 'react';\nimport { ImageStyle, StyleSheet, TextStyle, ViewStyle } from 'react-native';\nimport { Appearance } from 'react-native-appearance';\nimport { Theme, useTheme } from 'react-native-paper';\n\nexport const useSystemDarkMode = () => {\n  const [isSystemDark, setSystemDark] = useState<boolean>(\n    Appearance.getColorScheme() === 'dark',\n  );\n\n  useEffect(() => {\n    const subscription = Appearance.addChangeListener(({ colorScheme }) => {\n      setSystemDark(colorScheme === 'dark');\n    });\n\n    return () => subscription.remove();\n  }, []);\n\n  return isSystemDark;\n};\n\nexport const useManualDarkMode = () => {\n  const isSystemDark = useSystemDarkMode();\n  const [isDark, setIsDark] = useState(isSystemDark);\n\n  useEffect(() => {\n    setIsDark(isSystemDark);\n  }, [isSystemDark]);\n\n  return [isDark, setIsDark];\n};\n\nexport const useStyleSheet = <T>(createStyleSheet: (theme: Theme) => T) => {\n  const theme = useTheme();\n  const [styles, setStyles] = useState<T>(createStyleSheet(theme));\n\n  useEffect(() => {\n    setStyles(createStyleSheet(theme));\n  }, [createStyleSheet, theme]);\n\n  return styles;\n};\n","import { StyleSheet } from 'react-native';\n\nexport const fontStyles = StyleSheet.create({\n  body1: {\n    fontFamily: 'Poppins',\n    fontSize: 16,\n    fontWeight: '400',\n    letterSpacing: 0.5,\n  },\n  body2: {\n    fontFamily: 'Poppins',\n    fontSize: 14,\n    fontWeight: '400',\n    letterSpacing: 0.25,\n  },\n  button: {\n    fontFamily: 'Poppins',\n    fontSize: 14,\n    fontWeight: '500',\n    letterSpacing: 1.25,\n  },\n  caption: {\n    fontFamily: 'Poppins',\n    fontSize: 12,\n    fontWeight: '400',\n    letterSpacing: 0.4,\n  },\n  headline1: {\n    fontFamily: 'Poppins',\n    fontSize: 96,\n    fontWeight: '300',\n    letterSpacing: -1.5,\n  },\n  headline2: {\n    fontFamily: 'Poppins',\n    fontSize: 60,\n    fontWeight: '300',\n    letterSpacing: -0.5,\n  },\n  headline3: {\n    fontFamily: 'Poppins',\n    fontSize: 48,\n    fontWeight: '400',\n    letterSpacing: 0,\n  },\n  headline4: {\n    fontFamily: 'Poppins',\n    fontSize: 34,\n    fontWeight: '400',\n    letterSpacing: 0.25,\n  },\n  headline5: {\n    fontFamily: 'Poppins',\n    fontSize: 24,\n    fontWeight: '400',\n    letterSpacing: 0,\n  },\n  headline6: {\n    fontFamily: 'Poppins',\n    fontSize: 20,\n    fontWeight: '500',\n    letterSpacing: 0.15,\n  },\n  overline: {\n    fontFamily: 'Poppins',\n    fontSize: 10,\n    fontWeight: '400',\n    letterSpacing: 1.5,\n  },\n  subtitle1: {\n    fontFamily: 'Poppins',\n    fontSize: 16,\n    fontWeight: '400',\n    letterSpacing: 0.15,\n  },\n  subtitle2: {\n    fontFamily: 'Poppins',\n    fontSize: 14,\n    fontWeight: '500',\n    letterSpacing: 0.1,\n  },\n});\n","import React, { useCallback, useMemo } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Surface, Text, Theme, useTheme } from 'react-native-paper';\n\nimport { User } from '../shared/model/User';\n\nimport { FlexWrapRow } from './atoms/Row';\nimport { useStyleSheet } from './hooks/Theme';\nimport { fontStyles } from './styles/Font';\n\ntype Props = {\n  users: User[];\n};\nexport const Results: React.FC<Props> = ({ users }) => {\n  const styles = useStyleSheet(createStyleSheet);\n\n  const renderUser = useCallback(\n    (user: User) => {\n      const displayValue =\n        user.voteValue && user.voteValue !== 'hidden' ? user.voteValue : '?';\n\n      return (\n        <Surface key={`${user.id}`} style={styles.userCard}>\n          <View style={styles.userCardTitleContainer}>\n            <Text style={fontStyles.headline3}>{displayValue}</Text>\n          </View>\n          <View style={styles.userCardSubtitleContainer}>\n            <Text style={styles.subtitle} numberOfLines={1}>\n              {user.userName}\n            </Text>\n          </View>\n        </Surface>\n      );\n    },\n    [\n      styles.subtitle,\n      styles.userCard,\n      styles.userCardSubtitleContainer,\n      styles.userCardTitleContainer,\n    ],\n  );\n\n  return <FlexWrapRow mode=\"center\">{users.map(renderUser)}</FlexWrapRow>;\n};\n\nconst createStyleSheet = (theme: Theme) =>\n  StyleSheet.create({\n    subtitle: { ...fontStyles.body1, color: theme.dark ? 'black' : 'white' },\n    userCard: {\n      borderRadius: theme.roundness * 2,\n      elevation: 8,\n      height: 150,\n      margin: 8,\n      overflow: 'hidden',\n      width: 100,\n    },\n    userCardTitleContainer: {\n      alignItems: 'center',\n      flex: 1,\n      justifyContent: 'center',\n    },\n    userCardSubtitleContainer: {\n      alignItems: 'center',\n      backgroundColor: theme.dark ? theme.colors.accent : theme.colors.primary,\n      flexShrink: 1,\n      paddingHorizontal: 4,\n    },\n  });\n","import { Room } from \"./Room\";\nimport { VoteValue } from \"./User\";\n\nexport type Message = JoinRequestMessage | JoinResponseMessage | SetVoteValueMessage | SetNameMessage | LeaveRequestMessage | RoomUpdateMessage;\n\nexport enum MessageType {\n  JoinRequest,\n  JoinResponse,\n  LeaveRequest,\n  SetVoteValue,\n  SetName,\n  RoomUpdate,\n}\n\nexport interface JoinRequestMessage {\n  type: MessageType.JoinRequest;\n  roomId: string;\n  payload: {\n    name: string;\n  };\n}\n\nexport interface JoinResponseMessage {\n  type: MessageType.JoinResponse;\n  roomId: string;\n  payload: {\n    userId: string;\n  };\n}\n\nexport interface SetVoteValueMessage {\n  type: MessageType.SetVoteValue;\n  roomId: string;\n  payload: {\n    voteValue: VoteValue;\n  };\n}\n\nexport interface SetNameMessage {\n  type: MessageType.SetName;\n  roomId: string;\n  payload: {\n    name: string;\n  };\n}\n\nexport interface LeaveRequestMessage {\n  type: MessageType.LeaveRequest;\n  roomId: string;\n}\n\nexport interface RoomUpdateMessage {\n  type: MessageType.RoomUpdate;\n  roomId: string;\n  payload: {\n    room: Room;\n  };\n}","export const useUrlParam = (key: string) => {\n  const search = window.location.search;\n\n  const params = new URLSearchParams(search);\n\n  return params.get(key) || undefined;\n};\n","export enum Colors {\n  DarkZero = '#97b498',\n  DarkOne = '#94cc7d',\n  DarkTwo = '#69cb30',\n  DarkThree = '#c8cc00',\n  DarkFive = '#b27500',\n  DarkEight = '#a10000',\n  DarkThirteen = '#a252b7',\n  DarkTwentyOne = '#8a8a8a',\n  DarkUnknown = '#000000',\n  DarkDisabled = '#333',\n  LightZero = '#c8e6c9',\n  LightOne = '#C6FFAD',\n  LightTwo = '#9EFF64',\n  LightThree = '#FFFF3C',\n  LightFive = '#E9A426',\n  LightEight = '#DB0000',\n  LightThirteen = '#D581EA',\n  LightTwentyOne = '#BABABA',\n  LightUnknown = '#FFFFFF',\n  LightDisabled = '#ccc',\n}\n","import UUID from 'pure-uuid';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { Platform } from 'react-native';\n\nimport {\n  JoinRequestMessage,\n  Message,\n  MessageType,\n  SetNameMessage,\n  SetVoteValueMessage,\n} from '../shared/model/Message';\nimport { Room } from '../shared/model/Room';\nimport { VoteValue } from '../shared/model/User';\n\nimport { useUrlParam } from './UrlHandler';\n\n// Connect to Heroku 🧙‍♂️ (Update the port)\nconst SERVER_HOST = __DEV__\n  ? 'ws://localhost:8999'\n  : 'wss://planningpokerserver.herokuapp.com/';\n\nconst createEmptyRoom = (id: string): Room => ({\n  id,\n  name: '',\n  users: {},\n  admin: undefined,\n});\n\nexport const useRoom = (userName: string) => {\n  const ws = useRef(new WebSocket(SERVER_HOST)).current;\n  const roomId = useUrlParam('roomId');\n  const [voteValue, setVoteValue] = useState<VoteValue>();\n\n  if (Platform.OS === 'web' && !roomId) {\n    window.location.search = 'roomId=' + new UUID(4).toString();\n  }\n\n  const [room, setRoom] = useState(\n    createEmptyRoom(roomId || new UUID(4).toString()),\n  );\n\n  userName = userName || 'Guest';\n\n  const send = useCallback((msg: any) => ws.send(JSON.stringify(msg)), [ws]);\n\n  useEffect(() => {\n    ws.onopen = () => {\n      if (__DEV__) {\n        // eslint-disable-next-line no-console\n        console.log('Opened WebSocket connection');\n      }\n\n      const joinRequest: JoinRequestMessage = {\n        type: MessageType.JoinRequest,\n        roomId: room.id,\n        payload: {\n          name: userName,\n        },\n      };\n      send(joinRequest);\n    };\n    ws.onmessage = (event) => {\n      if (event.data === 'Heartbeat') {\n        // eslint-disable-next-line\n        console.log('Received heartbeat from server');\n        return;\n      }\n\n      const msg: Message = JSON.parse(event.data);\n\n      if (__DEV__) {\n        // eslint-disable-next-line no-console\n        console.log('Received message: ', msg);\n      }\n\n      switch (msg.type) {\n        case MessageType.RoomUpdate: {\n          if (__DEV__) {\n            // eslint-disable-next-line no-console\n            console.log('Updating room');\n          }\n          setRoom(msg.payload.room);\n          break;\n        }\n        default:\n      }\n    };\n    ws.onerror = (error) => {\n      if (__DEV__) {\n        // eslint-disable-next-line no-console\n        console.error('Error: ', error);\n      }\n      // setErrorMessage({ title: 'Oops!', message: 'Something went wrong...' });\n    };\n  }, [room.id, send, userName, ws]);\n\n  useEffect(() => {\n    if (ws.readyState === WebSocket.OPEN) {\n      const updateNameRequest: SetNameMessage = {\n        type: MessageType.SetName,\n        roomId: room.id,\n        payload: {\n          name: userName,\n        },\n      };\n      send(updateNameRequest);\n    }\n  }, [room.id, send, userName, ws.readyState]);\n\n  const vote = (newVoteValue: VoteValue) => {\n    setVoteValue(newVoteValue);\n    const msg: SetVoteValueMessage = {\n      type: MessageType.SetVoteValue,\n      roomId: room.id,\n      payload: {\n        voteValue: newVoteValue,\n      },\n    };\n    send(msg);\n  };\n\n  return { voteValue, vote, room };\n};\n","import React, { useCallback } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { useColorScheme } from 'react-native-appearance';\nimport { Card, Text, Theme } from 'react-native-paper';\n\nimport { Colors } from '../ConfigConstants';\nimport { VoteValue } from '../shared/model/User';\n\nimport { FlexWrapRow } from './atoms/Row';\nimport { useStyleSheet } from './hooks/Theme';\nimport { fontStyles } from './styles/Font';\n\ntype Props = {\n  value: VoteValue;\n  onPress: (value: VoteValue) => void;\n  isDark: boolean;\n  greyedOut: boolean;\n};\n\nconst values: VoteValue[] = [0, 1, 2, 3, 5, 8, 13, 21, '🤔'];\n\nexport const ValueCard: React.FC<Props> = ({\n  value,\n  onPress,\n  isDark,\n  greyedOut,\n}) => {\n  const styles = useStyleSheet(createStyleSheet);\n  const onCardPress = useCallback(() => onPress(value), [onPress, value]);\n\n  return (\n    <Card\n      style={[\n        styles.valueContainer,\n        {\n          backgroundColor: greyedOut\n            ? getColorForValue(-1, isDark)\n            : getColorForValue(value, isDark),\n        },\n      ]}\n      onPress={onCardPress}\n    >\n      <View style={styles.valueCard}>\n        <Text style={[fontStyles.subtitle1, { fontWeight: '900' }]}>\n          {value}\n        </Text>\n      </View>\n    </Card>\n  );\n};\n\nconst getColorForValue = (value: VoteValue, dark: boolean): Colors => {\n  switch (value) {\n    case -1:\n      return dark ? Colors.DarkDisabled : Colors.LightDisabled;\n    case 0:\n      return dark ? Colors.DarkZero : Colors.LightZero;\n    case 1:\n      return dark ? Colors.DarkOne : Colors.LightOne;\n    case 2:\n      return dark ? Colors.DarkTwo : Colors.LightTwo;\n    case 3:\n      return dark ? Colors.DarkThree : Colors.LightThree;\n    case 5:\n      return dark ? Colors.DarkFive : Colors.LightFive;\n    case 8:\n      return dark ? Colors.DarkEight : Colors.LightEight;\n    case 13:\n      return dark ? Colors.DarkThirteen : Colors.LightThirteen;\n    case 21:\n      return dark ? Colors.DarkTwentyOne : Colors.LightTwentyOne;\n    default:\n      return dark ? Colors.DarkUnknown : Colors.LightUnknown;\n  }\n};\n\ntype ValuesProps = {\n  onValuePress: (value: VoteValue) => void;\n  selectedValue: VoteValue | undefined;\n  isDark: boolean;\n};\n\nexport const VoteValues: React.FC<ValuesProps> = ({\n  onValuePress,\n  selectedValue,\n  isDark,\n}) => {\n  return (\n    <FlexWrapRow mode=\"center\">\n      {values.map((value) => (\n        <ValueCard\n          key={value}\n          value={value}\n          onPress={onValuePress}\n          isDark={isDark}\n          greyedOut={selectedValue !== undefined && selectedValue !== value}\n        />\n      ))}\n    </FlexWrapRow>\n  );\n};\n\nconst createStyleSheet = (theme: Theme) =>\n  StyleSheet.create({\n    container: {\n      flexDirection: 'row',\n      justifyContent: 'center',\n    },\n    valueCard: {\n      alignItems: 'center',\n      borderRadius: 8,\n      height: 50,\n      justifyContent: 'center',\n      width: 50,\n    },\n    valueContainer: {\n      marginHorizontal: 8,\n      elevation: 4,\n      marginVertical: 4,\n    },\n  });\n","export const constants = {\n  spacing: {\n    small: 4,\n    standard: 8,\n    medium: 16,\n    large: 32,\n    extraLarge: 64,\n  },\n};\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nimport { constants as C } from '../styles/Constants';\n\nconst S = StyleSheet.create({\n  spacingSmall: { width: C.spacing.small, height: C.spacing.small },\n  spacingStandard: { width: C.spacing.standard, height: C.spacing.standard },\n  spacingMedium: { width: C.spacing.medium, height: C.spacing.medium },\n  spacingLarge: { width: C.spacing.large, height: C.spacing.large },\n  spacingExtraLarge: {\n    width: C.spacing.extraLarge,\n    height: C.spacing.extraLarge,\n  },\n});\n\ntype Props = {\n  small?: boolean;\n  medium?: boolean;\n  large?: boolean;\n  extraLarge?: boolean;\n};\n\nexport const Spacer: React.FC<Props> = ({\n  small,\n  medium,\n  large,\n  extraLarge,\n}) => {\n  let style = S.spacingStandard;\n  if (small) style = S.spacingSmall;\n  else if (medium) style = S.spacingMedium;\n  else if (large) style = S.spacingLarge;\n  else if (extraLarge) style = S.spacingExtraLarge;\n\n  return <View style={style} />;\n};\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card, Text, Theme } from 'react-native-paper';\n\nimport { Spacer } from '../atoms/Spacer';\nimport { useStyleSheet } from '../hooks/Theme';\nimport { fontStyles } from '../styles/Font';\n\ntype RoomCardProps = {\n  roomId: string;\n};\n\nexport const RoomCard: React.FC<RoomCardProps> = ({ roomId }) => {\n  const styles = useStyleSheet(createStyleSheet);\n\n  return (\n    <Card elevation={0} style={styles.clipTextOverflow}>\n      <View style={[styles.container, styles.clipTextOverflow]}>\n        <Spacer medium />\n        <Text style={fontStyles.headline5}>Room</Text>\n        <Text\n          style={fontStyles.subtitle2}\n          numberOfLines={2}\n        >{`ID: ${roomId}`}</Text>\n        <Spacer medium />\n      </View>\n    </Card>\n  );\n};\n\nconst createStyleSheet = (theme: Theme) =>\n  StyleSheet.create({\n    container: {\n      paddingHorizontal: 8,\n      backgroundColor: theme.colors.background,\n      borderRadius: theme.roundness,\n    },\n    clipTextOverflow: { flexShrink: 1 },\n  });\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card, Text, Theme } from 'react-native-paper';\n\nimport { Spacer } from '../atoms/Spacer';\nimport { useStyleSheet } from '../hooks/Theme';\nimport { fontStyles } from '../styles/Font';\n\ntype UserCardProps = {\n  username: string;\n};\n\nexport const UserCard: React.FC<UserCardProps> = ({ username }) => {\n  const styles = useStyleSheet(createStyleSheet);\n  return (\n    <Card elevation={0}>\n      <View style={styles.container}>\n        <Spacer medium />\n        <Text style={fontStyles.headline5}>User</Text>\n        <Text style={fontStyles.subtitle2}>{`username: ${username}`}</Text>\n        <Spacer medium />\n      </View>\n    </Card>\n  );\n};\n\nconst createStyleSheet = (theme: Theme) =>\n  StyleSheet.create({\n    container: {\n      paddingHorizontal: 8,\n      backgroundColor: theme.colors.background,\n      borderRadius: theme.roundness,\n    },\n  });\n","import Switch from 'expo-dark-mode-switch';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { AsyncStorage, StyleSheet, View } from 'react-native';\nimport { Surface, Text, TextInput, Theme, useTheme } from 'react-native-paper';\nimport { widthPercentageToDP as wp } from 'react-native-responsive-screen';\n\nimport { Results } from './Results';\nimport { useRoom } from './RoomHandler';\nimport { VoteValues } from './VoteValues';\nimport { FlexWrapRow } from './atoms/Row';\nimport { Spacer } from './atoms/Spacer';\nimport { RoomCard } from './builders/RoomCard';\nimport { UserCard } from './builders/UserCard';\nimport { useStyleSheet } from './hooks/Theme';\nimport { fontStyles } from './styles/Font';\n\ntype Props = {\n  isDark: boolean;\n  toggleTheme: () => void;\n};\n\nexport const Root: React.FC<Props> = ({ isDark, toggleTheme }) => {\n  const [userName, setUserName] = useState<string>('');\n  const styles = useStyleSheet(createStyleSheet);\n  const theme = useTheme();\n\n  const { voteValue, vote, room } = useRoom(userName);\n\n  const updateUserName = useCallback(\n    (newName: string) => {\n      setUserName(newName);\n      AsyncStorage.setItem('username', newName);\n    },\n    [setUserName],\n  );\n\n  useEffect(() => {\n    AsyncStorage.getItem('username').then((savedName) => {\n      if (savedName) {\n        setUserName(savedName);\n      }\n    });\n  }, []);\n\n  return (\n    <Surface style={styles.page}>\n      <Surface style={styles.canvas}>\n        <View style={styles.head}>\n          <Text style={fontStyles.headline3}>{'Planning Poker 🎲'}</Text>\n          <View style={styles.switchWrapper}>\n            <Switch value={isDark} onChange={toggleTheme} />\n          </View>\n        </View>\n        <View style={styles.divider} />\n        <FlexWrapRow mode=\"space-evenly\">\n          <View style={styles.flexRow}>\n            <RoomCard roomId={room.id} />\n          </View>\n          <Spacer medium />\n          <View style={styles.flexRow}>\n            <UserCard username={userName} />\n          </View>\n        </FlexWrapRow>\n\n        <View style={styles.fillWidth}>\n          <Spacer />\n          <TextInput\n            style={{ backgroundColor: theme.colors.background }}\n            value={userName}\n            label={'Username'}\n            onChangeText={updateUserName}\n          />\n          <Spacer />\n        </View>\n        <View>\n          <Spacer />\n          <VoteValues\n            onValuePress={vote}\n            isDark={isDark}\n            selectedValue={voteValue}\n          />\n          <Spacer />\n        </View>\n        <Results users={Object.values(room.users)} />\n      </Surface>\n    </Surface>\n  );\n};\n\nconst createStyleSheet = (theme: Theme) =>\n  StyleSheet.create({\n    canvas: {\n      alignItems: 'center',\n      height: '100%',\n      paddingHorizontal: 16,\n      paddingVertical: 16,\n      width: wp('90%'),\n    },\n    divider: {\n      alignSelf: 'stretch',\n      borderBottomColor: theme.dark\n        ? theme.colors.accent\n        : theme.colors.primary,\n      borderBottomWidth: 2,\n    },\n    fillWidth: { alignSelf: 'stretch' },\n    flexRow: { flex: 1 },\n    head: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      width: '100%',\n    },\n    page: {\n      alignItems: 'center',\n      backgroundColor: theme.colors.primary,\n      flex: 1,\n      paddingBottom: 32,\n    },\n    switchWrapper: {\n      flexDirection: 'column',\n      justifyContent: 'center',\n      marginHorizontal: 16,\n    },\n  });\n","import { DarkTheme, DefaultTheme, Theme } from 'react-native-paper';\n\nconst light: Theme = {\n  ...DefaultTheme,\n  colors: {\n    ...DefaultTheme.colors,\n    primary: '#00838f',\n    accent: '#FfCDD2',\n  },\n};\n\nconst dark: Theme = {\n  ...DarkTheme,\n  colors: {\n    ...DarkTheme.colors,\n    primary: '#005662',\n    accent: '#cb9ca1',\n  },\n};\n\nexport default { light, dark };\n","import { useFonts } from '@use-expo/font';\nimport { AppLoading } from 'expo';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { AsyncStorage } from 'react-native';\nimport { AppearanceProvider } from 'react-native-appearance';\nimport { Provider as PaperProvider } from 'react-native-paper';\n\nimport { Root } from './src/Root';\nimport { useSystemDarkMode } from './src/hooks/Theme';\nimport Theme from './src/styles/Theme';\n\nexport default () => {\n  const isSystemDark = useSystemDarkMode();\n  const [isDark, setIsDark] = useState(isSystemDark);\n\n  const [fontsLoaded] = useFonts({\n    Poppins: require('./assets/fonts/Poppins-Regular.ttf'),\n  });\n\n  const toggleTheme = useCallback(() => {\n    setIsDark(!isDark);\n    AsyncStorage.setItem('isDark', JSON.stringify(!isDark));\n  }, [isDark, setIsDark]);\n\n  useEffect(() => {\n    AsyncStorage.getItem('isDark').then((savedIsDark) => {\n      if (savedIsDark) setIsDark(JSON.parse(savedIsDark));\n    });\n  }, []);\n\n  if (!fontsLoaded) {\n    return <AppLoading />;\n  }\n\n  return (\n    <AppearanceProvider>\n      <PaperProvider theme={isDark ? Theme.dark : Theme.light}>\n        <Root isDark={isDark} toggleTheme={toggleTheme} />\n      </PaperProvider>\n    </AppearanceProvider>\n  );\n};\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/PlanningPokerApp/expo-service-worker.js', { scope: '/PlanningPokerApp/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"./fonts/Poppins-Regular.ttf\";"],"sourceRoot":""}