{"version":3,"sources":["src/atoms/Row.tsx","src/hooks/Theme.ts","src/styles/Font.ts","src/Results.tsx","shared/model/Message.ts","src/UrlHandler.ts","ConfigConstants.ts","src/RoomHandler.ts","src/VoteValues.tsx","src/styles/Constants.ts","src/atoms/Spacer.tsx","src/builders/RoomCard.tsx","src/builders/UserCard.tsx","src/Root.tsx","src/styles/Theme.ts","App.tsx","web-build/register-service-worker.js","assets/fonts/Poppins-Regular.ttf"],"names":["FlexWrapRow","children","mode","View","style","styles","flexWrapRow","justifyContent","StyleSheet","create","alignItems","alignSelf","flexDirection","flexWrap","marginVertical","useSystemDarkMode","useState","Appearance","getColorScheme","isSystemDark","setSystemDark","useEffect","subscription","addChangeListener","colorScheme","remove","useStyleSheet","createStyleSheet","theme","useTheme","setStyles","fontStyles","body1","fontFamily","fontSize","fontWeight","letterSpacing","body2","button","caption","headline1","headline2","headline3","headline4","headline5","headline6","overline","subtitle1","subtitle2","MessageType","AvatarWatermark","avatarWatermark","Results","users","userId","renderUser","useCallback","user","isCurrentUser","id","displayValue","voteValue","key","currentUserDecoration","userCard","userCardTitleContainer","userCardSubtitleContainer","subtitle","numberOfLines","userName","map","position","top","right","borderWidth","borderColor","dark","colors","accent","primary","color","borderRadius","roundness","elevation","height","margin","overflow","width","flex","backgroundColor","flexShrink","paddingHorizontal","Colors","useRoom","ws","useRef","WebSocket","current","roomId","search","window","location","URLSearchParams","get","undefined","useUrlParam","setVoteValue","setUserId","Platform","OS","UUID","toString","name","admin","room","setRoom","send","msg","JSON","stringify","onopen","joinRequest","type","JoinRequest","payload","onmessage","event","data","parse","JoinResponse","RoomUpdate","__DEV__","console","log","onerror","error","readyState","OPEN","updateNameRequest","SetName","vote","newVoteValue","SetVoteValue","values","ValueCard","value","onPress","isDark","greyedOut","onCardPress","valueContainer","getColorForValue","valueCard","DarkDisabled","LightDisabled","DarkZero","LightZero","DarkOne","LightOne","DarkTwo","LightTwo","DarkThree","LightThree","DarkFive","LightFive","DarkEight","LightEight","DarkThirteen","LightThirteen","DarkTwentyOne","LightTwentyOne","DarkUnknown","LightUnknown","VoteValues","onValuePress","selectedValue","container","marginHorizontal","constants","small","standard","medium","large","extraLarge","S","spacingSmall","C","spacingStandard","spacingMedium","spacingLarge","spacingExtraLarge","Spacer","RoomCard","clipTextOverflow","background","UserCard","username","onUsernameChange","label","onChangeText","Root","toggleTheme","setUserName","updateUserName","newName","AsyncStorage","setItem","getItem","then","savedName","page","canvas","head","switchWrapper","onChange","divider","flexRow","Object","paddingVertical","wp","borderBottomColor","borderBottomWidth","fillWidth","paddingBottom","light","DefaultTheme","DarkTheme","setIsDark","useFonts","Poppins","require","fontsLoaded","savedIsDark","Theme","AppLoading","navigator","addEventListener","serviceWorker","register","scope","info","catch","module","exports"],"mappings":"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","file":"static/js/app.730d876a.chunk.js","sourcesContent":["import React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\ntype FlexWrapRowProps = {\n  mode?:\n    | 'flex-start'\n    | 'flex-end'\n    | 'center'\n    | 'space-between'\n    | 'space-around'\n    | 'space-evenly';\n};\n\nexport const FlexWrapRow: React.FC<FlexWrapRowProps> = ({ children, mode }) => {\n  return (\n    <View style={[styles.flexWrapRow, { justifyContent: mode }]}>\n      {children}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  flexWrapRow: {\n    alignItems: 'center',\n    alignSelf: 'stretch',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginVertical: 16,\n  },\n});\n","import React, { useEffect, useState } from 'react';\nimport { ImageStyle, StyleSheet, TextStyle, ViewStyle } from 'react-native';\nimport { Appearance } from 'react-native-appearance';\nimport { Theme, useTheme } from 'react-native-paper';\n\nexport const useSystemDarkMode = () => {\n  const [isSystemDark, setSystemDark] = useState<boolean>(\n    Appearance.getColorScheme() === 'dark',\n  );\n\n  useEffect(() => {\n    const subscription = Appearance.addChangeListener(({ colorScheme }) => {\n      setSystemDark(colorScheme === 'dark');\n    });\n\n    return () => subscription.remove();\n  }, []);\n\n  return isSystemDark;\n};\n\nexport const useManualDarkMode = () => {\n  const isSystemDark = useSystemDarkMode();\n  const [isDark, setIsDark] = useState(isSystemDark);\n\n  useEffect(() => {\n    setIsDark(isSystemDark);\n  }, [isSystemDark]);\n\n  return [isDark, setIsDark];\n};\n\nexport const useStyleSheet = <T>(createStyleSheet: (theme: Theme) => T) => {\n  const theme = useTheme();\n  const [styles, setStyles] = useState<T>(createStyleSheet(theme));\n\n  useEffect(() => {\n    setStyles(createStyleSheet(theme));\n  }, [createStyleSheet, theme]);\n\n  return styles;\n};\n","import { StyleSheet } from 'react-native';\n\nexport const fontStyles = StyleSheet.create({\n  body1: {\n    fontFamily: 'Poppins',\n    fontSize: 16,\n    fontWeight: '400',\n    letterSpacing: 0.5,\n  },\n  body2: {\n    fontFamily: 'Poppins',\n    fontSize: 14,\n    fontWeight: '400',\n    letterSpacing: 0.25,\n  },\n  button: {\n    fontFamily: 'Poppins',\n    fontSize: 14,\n    fontWeight: '500',\n    letterSpacing: 1.25,\n  },\n  caption: {\n    fontFamily: 'Poppins',\n    fontSize: 12,\n    fontWeight: '400',\n    letterSpacing: 0.4,\n  },\n  headline1: {\n    fontFamily: 'Poppins',\n    fontSize: 96,\n    fontWeight: '300',\n    letterSpacing: -1.5,\n  },\n  headline2: {\n    fontFamily: 'Poppins',\n    fontSize: 60,\n    fontWeight: '300',\n    letterSpacing: -0.5,\n  },\n  headline3: {\n    fontFamily: 'Poppins',\n    fontSize: 48,\n    fontWeight: '400',\n    letterSpacing: 0,\n  },\n  headline4: {\n    fontFamily: 'Poppins',\n    fontSize: 34,\n    fontWeight: '400',\n    letterSpacing: 0.25,\n  },\n  headline5: {\n    fontFamily: 'Poppins',\n    fontSize: 24,\n    fontWeight: '400',\n    letterSpacing: 0,\n  },\n  headline6: {\n    fontFamily: 'Poppins',\n    fontSize: 20,\n    fontWeight: '500',\n    letterSpacing: 0.15,\n  },\n  overline: {\n    fontFamily: 'Poppins',\n    fontSize: 10,\n    fontWeight: '400',\n    letterSpacing: 1.5,\n  },\n  subtitle1: {\n    fontFamily: 'Poppins',\n    fontSize: 16,\n    fontWeight: '400',\n    letterSpacing: 0.15,\n  },\n  subtitle2: {\n    fontFamily: 'Poppins',\n    fontSize: 14,\n    fontWeight: '500',\n    letterSpacing: 0.1,\n  },\n});\n","import React, { useCallback, useMemo } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Surface, Text, Theme, useTheme } from 'react-native-paper';\n\nimport { User } from '../shared/model/User';\n\nimport { FlexWrapRow } from './atoms/Row';\nimport { useStyleSheet } from './hooks/Theme';\nimport { fontStyles } from './styles/Font';\n\ntype Props = {\n  users: User[];\n  userId?: string;\n};\n\nconst AvatarWatermark: React.FC = () => {\n  const styles = useStyleSheet(createStyleSheet);\n  return (\n    <View style={styles.avatarWatermark}>\n      <Text style={fontStyles.body2}>{'👤'}</Text>\n    </View>\n  );\n};\n\nexport const Results: React.FC<Props> = ({ users, userId }) => {\n  const styles = useStyleSheet(createStyleSheet);\n\n  const renderUser = useCallback(\n    (user: User) => {\n      const isCurrentUser = user.id === userId;\n      const displayValue =\n        user.voteValue && user.voteValue !== 'hidden' ? user.voteValue : '?';\n\n      return (\n        <Surface\n          key={`${user.id}`}\n          style={[\n            isCurrentUser && styles.currentUserDecoration,\n            styles.userCard,\n          ]}\n        >\n          {isCurrentUser && <AvatarWatermark />}\n          <View style={styles.userCardTitleContainer}>\n            <Text style={fontStyles.headline3}>{displayValue}</Text>\n          </View>\n          <View style={styles.userCardSubtitleContainer}>\n            <Text style={styles.subtitle} numberOfLines={1}>\n              {user.userName}\n            </Text>\n          </View>\n        </Surface>\n      );\n    },\n    [\n      styles.currentUserDecoration,\n      styles.subtitle,\n      styles.userCard,\n      styles.userCardSubtitleContainer,\n      styles.userCardTitleContainer,\n      userId,\n    ],\n  );\n\n  return <FlexWrapRow mode=\"center\">{users.map(renderUser)}</FlexWrapRow>;\n};\n\nconst createStyleSheet = (theme: Theme) =>\n  StyleSheet.create({\n    avatarWatermark: {\n      position: 'absolute',\n      top: 4,\n      right: 4,\n    },\n    currentUserDecoration: {\n      borderWidth: 2,\n      borderColor: theme.dark ? theme.colors.accent : theme.colors.primary,\n    },\n    subtitle: { ...fontStyles.body1, color: theme.dark ? 'black' : 'white' },\n    userCard: {\n      borderRadius: theme.roundness * 2,\n      elevation: 8,\n      height: 150,\n      margin: 8,\n      overflow: 'hidden',\n      width: 100,\n    },\n    userCardTitleContainer: {\n      alignItems: 'center',\n      flex: 1,\n      justifyContent: 'center',\n    },\n    userCardSubtitleContainer: {\n      alignItems: 'center',\n      backgroundColor: theme.dark ? theme.colors.accent : theme.colors.primary,\n      flexShrink: 1,\n      paddingHorizontal: 4,\n    },\n  });\n","import { Room } from \"./Room\";\nimport { VoteValue } from \"./User\";\n\nexport type Message = JoinRequestMessage | JoinResponseMessage | SetVoteValueMessage | SetNameMessage | LeaveRequestMessage | RoomUpdateMessage;\n\nexport enum MessageType {\n  JoinRequest,\n  JoinResponse,\n  LeaveRequest,\n  SetVoteValue,\n  SetName,\n  RoomUpdate,\n}\n\nexport interface JoinRequestMessage {\n  type: MessageType.JoinRequest;\n  roomId: string;\n  payload: {\n    name: string;\n  };\n}\n\nexport interface JoinResponseMessage {\n  type: MessageType.JoinResponse;\n  roomId: string;\n  payload: {\n    userId: string;\n  };\n}\n\nexport interface SetVoteValueMessage {\n  type: MessageType.SetVoteValue;\n  roomId: string;\n  payload: {\n    voteValue: VoteValue;\n  };\n}\n\nexport interface SetNameMessage {\n  type: MessageType.SetName;\n  roomId: string;\n  payload: {\n    name: string;\n  };\n}\n\nexport interface LeaveRequestMessage {\n  type: MessageType.LeaveRequest;\n  roomId: string;\n}\n\nexport interface RoomUpdateMessage {\n  type: MessageType.RoomUpdate;\n  roomId: string;\n  payload: {\n    room: Room;\n  };\n}","export const useUrlParam = (key: string) => {\n  const search = window.location.search;\n\n  const params = new URLSearchParams(search);\n\n  return params.get(key) || undefined;\n};\n","export enum Colors {\n  DarkZero = '#97b498',\n  DarkOne = '#94cc7d',\n  DarkTwo = '#69cb30',\n  DarkThree = '#c8cc00',\n  DarkFive = '#b27500',\n  DarkEight = '#a10000',\n  DarkThirteen = '#a252b7',\n  DarkTwentyOne = '#8a8a8a',\n  DarkUnknown = '#000000',\n  DarkDisabled = '#333',\n  LightZero = '#c8e6c9',\n  LightOne = '#C6FFAD',\n  LightTwo = '#9EFF64',\n  LightThree = '#FFFF3C',\n  LightFive = '#E9A426',\n  LightEight = '#DB0000',\n  LightThirteen = '#D581EA',\n  LightTwentyOne = '#BABABA',\n  LightUnknown = '#FFFFFF',\n  LightDisabled = '#ccc',\n}\n","import UUID from 'pure-uuid';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { Platform } from 'react-native';\n\nimport {\n  JoinRequestMessage,\n  Message,\n  MessageType,\n  SetNameMessage,\n  SetVoteValueMessage,\n} from '../shared/model/Message';\nimport { Room } from '../shared/model/Room';\nimport { VoteValue } from '../shared/model/User';\n\nimport { useUrlParam } from './UrlHandler';\n\n// Connect to Heroku 🧙‍♂️ (Update the port)\nconst SERVER_HOST = __DEV__\n  ? 'ws://localhost:8999'\n  : 'wss://planningpokerserver.herokuapp.com/';\n\nconst createEmptyRoom = (id: string): Room => ({\n  id,\n  name: '',\n  users: {},\n  admin: undefined,\n});\n\nexport const useRoom = (userName: string) => {\n  const ws = useRef(new WebSocket(SERVER_HOST)).current;\n  const roomId = useUrlParam('roomId');\n  const [voteValue, setVoteValue] = useState<VoteValue>();\n  const [userId, setUserId] = useState<string>();\n\n  if (Platform.OS === 'web' && !roomId) {\n    window.location.search = 'roomId=' + new UUID(4).toString();\n  }\n\n  const [room, setRoom] = useState(\n    createEmptyRoom(roomId || new UUID(4).toString()),\n  );\n\n  userName = userName || 'Guest';\n\n  const send = useCallback((msg: any) => ws.send(JSON.stringify(msg)), [ws]);\n\n  useEffect(() => {\n    ws.onopen = () => {\n      if (__DEV__) {\n        // eslint-disable-next-line no-console\n        console.log('Opened WebSocket connection');\n      }\n\n      const joinRequest: JoinRequestMessage = {\n        type: MessageType.JoinRequest,\n        roomId: room.id,\n        payload: {\n          name: userName,\n        },\n      };\n      send(joinRequest);\n    };\n    ws.onmessage = (event) => {\n      if (event.data === 'Heartbeat') {\n        // eslint-disable-next-line\n        console.log('Received heartbeat from server');\n        return;\n      }\n\n      const msg: Message = JSON.parse(event.data);\n\n      if (__DEV__) {\n        // eslint-disable-next-line no-console\n        console.log('Received message: ', msg);\n      }\n\n      switch (msg.type) {\n        case MessageType.JoinResponse: {\n          setUserId(msg.payload.userId);\n          break;\n        }\n        case MessageType.RoomUpdate: {\n          if (__DEV__) {\n            // eslint-disable-next-line no-console\n            console.log('Updating room');\n          }\n          setRoom(msg.payload.room);\n          break;\n        }\n        default:\n      }\n    };\n    ws.onerror = (error) => {\n      if (__DEV__) {\n        // eslint-disable-next-line no-console\n        console.error('Error: ', error);\n      }\n      // setErrorMessage({ title: 'Oops!', message: 'Something went wrong...' });\n    };\n  }, [room.id, send, userName, ws]);\n\n  useEffect(() => {\n    if (ws.readyState === WebSocket.OPEN) {\n      const updateNameRequest: SetNameMessage = {\n        type: MessageType.SetName,\n        roomId: room.id,\n        payload: {\n          name: userName,\n        },\n      };\n      send(updateNameRequest);\n    }\n  }, [room.id, send, userName, ws.readyState]);\n\n  const vote = (newVoteValue: VoteValue) => {\n    setVoteValue(newVoteValue);\n    const msg: SetVoteValueMessage = {\n      type: MessageType.SetVoteValue,\n      roomId: room.id,\n      payload: {\n        voteValue: newVoteValue,\n      },\n    };\n    send(msg);\n  };\n\n  return { voteValue, vote, room, userId };\n};\n","import React, { useCallback } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { useColorScheme } from 'react-native-appearance';\nimport { Card, Text, Theme } from 'react-native-paper';\n\nimport { Colors } from '../ConfigConstants';\nimport { VoteValue } from '../shared/model/User';\n\nimport { FlexWrapRow } from './atoms/Row';\nimport { useStyleSheet } from './hooks/Theme';\nimport { fontStyles } from './styles/Font';\n\ntype Props = {\n  value: VoteValue;\n  onPress: (value: VoteValue) => void;\n  isDark: boolean;\n  greyedOut: boolean;\n};\n\nconst values: VoteValue[] = [0, 1, 2, 3, 5, 8, 13, 21, '🤔'];\n\nexport const ValueCard: React.FC<Props> = ({\n  value,\n  onPress,\n  isDark,\n  greyedOut,\n}) => {\n  const styles = useStyleSheet(createStyleSheet);\n  const onCardPress = useCallback(() => onPress(value), [onPress, value]);\n\n  return (\n    <Card\n      style={[\n        styles.valueContainer,\n        {\n          backgroundColor: greyedOut\n            ? getColorForValue(-1, isDark)\n            : getColorForValue(value, isDark),\n        },\n      ]}\n      onPress={onCardPress}\n    >\n      <View style={styles.valueCard}>\n        <Text style={[fontStyles.subtitle1, { fontWeight: '900' }]}>\n          {value}\n        </Text>\n      </View>\n    </Card>\n  );\n};\n\nconst getColorForValue = (value: VoteValue, dark: boolean): Colors => {\n  switch (value) {\n    case -1:\n      return dark ? Colors.DarkDisabled : Colors.LightDisabled;\n    case 0:\n      return dark ? Colors.DarkZero : Colors.LightZero;\n    case 1:\n      return dark ? Colors.DarkOne : Colors.LightOne;\n    case 2:\n      return dark ? Colors.DarkTwo : Colors.LightTwo;\n    case 3:\n      return dark ? Colors.DarkThree : Colors.LightThree;\n    case 5:\n      return dark ? Colors.DarkFive : Colors.LightFive;\n    case 8:\n      return dark ? Colors.DarkEight : Colors.LightEight;\n    case 13:\n      return dark ? Colors.DarkThirteen : Colors.LightThirteen;\n    case 21:\n      return dark ? Colors.DarkTwentyOne : Colors.LightTwentyOne;\n    default:\n      return dark ? Colors.DarkUnknown : Colors.LightUnknown;\n  }\n};\n\ntype ValuesProps = {\n  onValuePress: (value: VoteValue) => void;\n  selectedValue: VoteValue | undefined;\n  isDark: boolean;\n};\n\nexport const VoteValues: React.FC<ValuesProps> = ({\n  onValuePress,\n  selectedValue,\n  isDark,\n}) => {\n  return (\n    <FlexWrapRow mode=\"center\">\n      {values.map((value) => (\n        <ValueCard\n          key={value}\n          value={value}\n          onPress={onValuePress}\n          isDark={isDark}\n          greyedOut={selectedValue !== undefined && selectedValue !== value}\n        />\n      ))}\n    </FlexWrapRow>\n  );\n};\n\nconst createStyleSheet = (theme: Theme) =>\n  StyleSheet.create({\n    container: {\n      flexDirection: 'row',\n      justifyContent: 'center',\n    },\n    valueCard: {\n      alignItems: 'center',\n      borderRadius: 8,\n      height: 50,\n      justifyContent: 'center',\n      width: 50,\n    },\n    valueContainer: {\n      marginHorizontal: 8,\n      elevation: 4,\n      marginVertical: 4,\n    },\n  });\n","export const constants = {\n  spacing: {\n    small: 4,\n    standard: 8,\n    medium: 16,\n    large: 32,\n    extraLarge: 64,\n  },\n};\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nimport { constants as C } from '../styles/Constants';\n\nconst S = StyleSheet.create({\n  spacingSmall: { width: C.spacing.small, height: C.spacing.small },\n  spacingStandard: { width: C.spacing.standard, height: C.spacing.standard },\n  spacingMedium: { width: C.spacing.medium, height: C.spacing.medium },\n  spacingLarge: { width: C.spacing.large, height: C.spacing.large },\n  spacingExtraLarge: {\n    width: C.spacing.extraLarge,\n    height: C.spacing.extraLarge,\n  },\n});\n\ntype Props = {\n  small?: boolean;\n  medium?: boolean;\n  large?: boolean;\n  extraLarge?: boolean;\n};\n\nexport const Spacer: React.FC<Props> = ({\n  small,\n  medium,\n  large,\n  extraLarge,\n}) => {\n  let style = S.spacingStandard;\n  if (small) style = S.spacingSmall;\n  else if (medium) style = S.spacingMedium;\n  else if (large) style = S.spacingLarge;\n  else if (extraLarge) style = S.spacingExtraLarge;\n\n  return <View style={style} />;\n};\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card, Text, Theme } from 'react-native-paper';\n\nimport { Spacer } from '../atoms/Spacer';\nimport { useStyleSheet } from '../hooks/Theme';\nimport { fontStyles } from '../styles/Font';\n\ntype RoomCardProps = {\n  roomId: string;\n};\n\nexport const RoomCard: React.FC<RoomCardProps> = ({ roomId }) => {\n  const styles = useStyleSheet(createStyleSheet);\n\n  return (\n    <Card elevation={0} style={styles.clipTextOverflow}>\n      <View style={[styles.container, styles.clipTextOverflow]}>\n        <Spacer medium />\n        <Text style={fontStyles.headline5}>Room</Text>\n        <Text\n          style={fontStyles.subtitle2}\n          numberOfLines={2}\n        >{`ID: ${roomId}`}</Text>\n        <Spacer medium />\n      </View>\n    </Card>\n  );\n};\n\nconst createStyleSheet = (theme: Theme) =>\n  StyleSheet.create({\n    container: {\n      paddingHorizontal: 8,\n      backgroundColor: theme.colors.background,\n      borderRadius: theme.roundness,\n    },\n    clipTextOverflow: { flexShrink: 1 },\n  });\n","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Card, Text, TextInput, Theme, useTheme } from 'react-native-paper';\n\nimport { Spacer } from '../atoms/Spacer';\nimport { useStyleSheet } from '../hooks/Theme';\nimport { fontStyles } from '../styles/Font';\n\ntype UserCardProps = {\n  username: string;\n  onUsernameChange: (value: string) => void;\n};\n\nexport const UserCard: React.FC<UserCardProps> = ({\n  username,\n  onUsernameChange,\n}) => {\n  const styles = useStyleSheet(createStyleSheet);\n  const theme = useTheme();\n  return (\n    <Card elevation={0}>\n      <View style={styles.container}>\n        <Spacer medium />\n        <Text style={fontStyles.headline5}>User</Text>\n        <TextInput\n          style={{ backgroundColor: theme.colors.background }}\n          value={username}\n          label={'Username'}\n          onChangeText={onUsernameChange}\n        />\n        <Spacer medium />\n      </View>\n    </Card>\n  );\n};\n\nconst createStyleSheet = (theme: Theme) =>\n  StyleSheet.create({\n    container: {\n      paddingHorizontal: 8,\n      backgroundColor: theme.colors.background,\n      borderRadius: theme.roundness * 2,\n    },\n  });\n","import Switch from 'expo-dark-mode-switch';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { AsyncStorage, StyleSheet, View } from 'react-native';\nimport { Surface, Text, TextInput, Theme, useTheme } from 'react-native-paper';\nimport { widthPercentageToDP as wp } from 'react-native-responsive-screen';\n\nimport { Results } from './Results';\nimport { useRoom } from './RoomHandler';\nimport { VoteValues } from './VoteValues';\nimport { FlexWrapRow } from './atoms/Row';\nimport { Spacer } from './atoms/Spacer';\nimport { RoomCard } from './builders/RoomCard';\nimport { UserCard } from './builders/UserCard';\nimport { useStyleSheet } from './hooks/Theme';\nimport { fontStyles } from './styles/Font';\n\ntype Props = {\n  isDark: boolean;\n  toggleTheme: () => void;\n};\n\nexport const Root: React.FC<Props> = ({ isDark, toggleTheme }) => {\n  const [userName, setUserName] = useState<string>('');\n  const styles = useStyleSheet(createStyleSheet);\n\n  const { voteValue, vote, room, userId } = useRoom(userName);\n\n  const updateUserName = useCallback(\n    (newName: string) => {\n      setUserName(newName);\n      AsyncStorage.setItem('username', newName);\n    },\n    [setUserName],\n  );\n\n  useEffect(() => {\n    AsyncStorage.getItem('username').then((savedName) => {\n      if (savedName) {\n        setUserName(savedName);\n      }\n    });\n  }, []);\n\n  return (\n    <Surface style={styles.page}>\n      <Surface style={styles.canvas}>\n        <View style={styles.head}>\n          <Text style={fontStyles.headline3}>{'Planning Poker 🎲'}</Text>\n          <View style={styles.switchWrapper}>\n            <Switch value={isDark} onChange={toggleTheme} />\n          </View>\n        </View>\n        <View style={styles.divider} />\n        <FlexWrapRow mode=\"space-evenly\">\n          <View style={styles.flexRow}>\n            <RoomCard roomId={room.id} />\n          </View>\n          <Spacer medium />\n          <View style={styles.flexRow}>\n            <UserCard username={userName} onUsernameChange={updateUserName} />\n          </View>\n        </FlexWrapRow>\n        <View>\n          <Spacer />\n          <VoteValues\n            onValuePress={vote}\n            isDark={isDark}\n            selectedValue={voteValue}\n          />\n          <Spacer />\n        </View>\n        <Results users={Object.values(room.users)} userId={userId} />\n      </Surface>\n    </Surface>\n  );\n};\n\nconst createStyleSheet = (theme: Theme) =>\n  StyleSheet.create({\n    canvas: {\n      alignItems: 'center',\n      height: '100%',\n      paddingHorizontal: 16,\n      paddingVertical: 16,\n      width: wp('90%'),\n    },\n    divider: {\n      alignSelf: 'stretch',\n      borderBottomColor: theme.dark\n        ? theme.colors.accent\n        : theme.colors.primary,\n      borderBottomWidth: 2,\n    },\n    fillWidth: { alignSelf: 'stretch' },\n    flexRow: { flex: 1, height: '100%' },\n    head: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      width: '100%',\n    },\n    page: {\n      alignItems: 'center',\n      backgroundColor: theme.colors.primary,\n      flex: 1,\n      paddingBottom: 32,\n    },\n    switchWrapper: {\n      flexDirection: 'column',\n      justifyContent: 'center',\n      marginHorizontal: 16,\n    },\n  });\n","import { DarkTheme, DefaultTheme, Theme } from 'react-native-paper';\n\nconst light: Theme = {\n  ...DefaultTheme,\n  colors: {\n    ...DefaultTheme.colors,\n    primary: '#00838f',\n    accent: '#FfCDD2',\n  },\n};\n\nconst dark: Theme = {\n  ...DarkTheme,\n  colors: {\n    ...DarkTheme.colors,\n    primary: '#005662',\n    accent: '#cb9ca1',\n  },\n};\n\nexport default { light, dark };\n","import { useFonts } from '@use-expo/font';\nimport { AppLoading } from 'expo';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { AsyncStorage } from 'react-native';\nimport { AppearanceProvider } from 'react-native-appearance';\nimport { Provider as PaperProvider } from 'react-native-paper';\n\nimport { Root } from './src/Root';\nimport { useSystemDarkMode } from './src/hooks/Theme';\nimport Theme from './src/styles/Theme';\n\nexport default () => {\n  const isSystemDark = useSystemDarkMode();\n  const [isDark, setIsDark] = useState(isSystemDark);\n\n  const [fontsLoaded] = useFonts({\n    Poppins: require('./assets/fonts/Poppins-Regular.ttf'),\n  });\n\n  const toggleTheme = useCallback(() => {\n    setIsDark(!isDark);\n    AsyncStorage.setItem('isDark', JSON.stringify(!isDark));\n  }, [isDark, setIsDark]);\n\n  useEffect(() => {\n    AsyncStorage.getItem('isDark').then((savedIsDark) => {\n      if (savedIsDark) setIsDark(JSON.parse(savedIsDark));\n    });\n  }, []);\n\n  if (!fontsLoaded) {\n    return <AppLoading />;\n  }\n\n  return (\n    <AppearanceProvider>\n      <PaperProvider theme={isDark ? Theme.dark : Theme.light}>\n        <Root isDark={isDark} toggleTheme={toggleTheme} />\n      </PaperProvider>\n    </AppearanceProvider>\n  );\n};\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/PlanningPokerApp/expo-service-worker.js', { scope: '/PlanningPokerApp/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"./fonts/Poppins-Regular.ttf\";"],"sourceRoot":""}